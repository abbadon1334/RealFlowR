### YamlMime:ManagedReference
items:
- uid: FlowR.Core.NodeCollectionEvent
  commentId: T:FlowR.Core.NodeCollectionEvent
  id: NodeCollectionEvent
  parent: FlowR.Core
  children:
  - FlowR.Core.NodeCollectionEvent.#ctor(FlowR.Core.Node)
  - FlowR.Core.NodeCollectionEvent.Off(System.String,EventHandler)
  - FlowR.Core.NodeCollectionEvent.On(System.String,EventHandler)
  - FlowR.Core.NodeCollectionEvent.OnClientEventTriggered(System.String,EventArgs)
  langs:
  - csharp
  - vb
  name: NodeCollectionEvent
  nameWithType: NodeCollectionEvent
  fullName: FlowR.Core.NodeCollectionEvent
  type: Class
  source:
    remote:
      path: FlowR.Core/NodeCollectionEvent.cs
      branch: master
      repo: https://github.com/abbadon1334/RealFlowR.git
    id: NodeCollectionEvent
    path: FlowR.Core/NodeCollectionEvent.cs
    startLine: 8
  assemblies:
  - FlowR.Core
  namespace: FlowR.Core
  summary: "\nCollection Events class that filter to only essential method\n"
  example: []
  syntax:
    content: 'public class NodeCollectionEvent : NodeCollection<List<EventHandler>>'
    content.vb: >-
      Public Class NodeCollectionEvent

          Inherits NodeCollection(Of List(Of EventHandler))
  inheritance:
  - System.Object
  - FlowR.Core.NodeCollection{List{EventHandler}}
  inheritedMembers:
  - FlowR.Core.NodeCollection{List{EventHandler}}.AfterAdded
  - FlowR.Core.NodeCollection{List{EventHandler}}.AfterChanged
  - FlowR.Core.NodeCollection{List{EventHandler}}.AfterRemoved
  - FlowR.Core.NodeCollection{List{EventHandler}}.BeforeAdded
  - FlowR.Core.NodeCollection{List{EventHandler}}.BeforeChanged
  - FlowR.Core.NodeCollection{List{EventHandler}}.BeforeRemoved
  - FlowR.Core.NodeCollection{List{EventHandler}}.Owner
  - FlowR.Core.NodeCollection{List{EventHandler}}.Set(System.String,List{EventHandler})
  - FlowR.Core.NodeCollection{List{EventHandler}}.Unset(System.String)
  - FlowR.Core.NodeCollection{List{EventHandler}}.Exists(System.String)
  - FlowR.Core.NodeCollection{List{EventHandler}}.Get(System.String)
  - FlowR.Core.NodeCollection{List{EventHandler}}.Count
  - FlowR.Core.NodeCollection{List{EventHandler}}.GetFirst
  - FlowR.Core.NodeCollection{List{EventHandler}}.GetLast
  - FlowR.Core.NodeCollection{List{EventHandler}}.ToDictionary
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: FlowR.Core.NodeCollectionEvent.#ctor(FlowR.Core.Node)
  commentId: M:FlowR.Core.NodeCollectionEvent.#ctor(FlowR.Core.Node)
  id: '#ctor(FlowR.Core.Node)'
  parent: FlowR.Core.NodeCollectionEvent
  langs:
  - csharp
  - vb
  name: NodeCollectionEvent(Node)
  nameWithType: NodeCollectionEvent.NodeCollectionEvent(Node)
  fullName: FlowR.Core.NodeCollectionEvent.NodeCollectionEvent(FlowR.Core.Node)
  type: Constructor
  source:
    remote:
      path: FlowR.Core/NodeCollectionEvent.cs
      branch: master
      repo: https://github.com/abbadon1334/RealFlowR.git
    id: .ctor
    path: FlowR.Core/NodeCollectionEvent.cs
    startLine: 12
  assemblies:
  - FlowR.Core
  namespace: FlowR.Core
  example: []
  syntax:
    content: public NodeCollectionEvent(Node owner)
    parameters:
    - id: owner
      type: FlowR.Core.Node
    content.vb: Public Sub New(owner As Node)
  overload: FlowR.Core.NodeCollectionEvent.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: FlowR.Core.NodeCollectionEvent.On(System.String,EventHandler)
  commentId: M:FlowR.Core.NodeCollectionEvent.On(System.String,EventHandler)
  id: On(System.String,EventHandler)
  parent: FlowR.Core.NodeCollectionEvent
  langs:
  - csharp
  - vb
  name: On(String, EventHandler)
  nameWithType: NodeCollectionEvent.On(String, EventHandler)
  fullName: FlowR.Core.NodeCollectionEvent.On(System.String, EventHandler)
  type: Method
  source:
    remote:
      path: FlowR.Core/NodeCollectionEvent.cs
      branch: master
      repo: https://github.com/abbadon1334/RealFlowR.git
    id: On
    path: FlowR.Core/NodeCollectionEvent.cs
    startLine: 18
  assemblies:
  - FlowR.Core
  namespace: FlowR.Core
  example: []
  syntax:
    content: public void On(string eventName, EventHandler handler)
    parameters:
    - id: eventName
      type: System.String
    - id: handler
      type: EventHandler
    content.vb: Public Sub On(eventName As String, handler As EventHandler)
  overload: FlowR.Core.NodeCollectionEvent.On*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: FlowR.Core.NodeCollectionEvent.Off(System.String,EventHandler)
  commentId: M:FlowR.Core.NodeCollectionEvent.Off(System.String,EventHandler)
  id: Off(System.String,EventHandler)
  parent: FlowR.Core.NodeCollectionEvent
  langs:
  - csharp
  - vb
  name: Off(String, EventHandler)
  nameWithType: NodeCollectionEvent.Off(String, EventHandler)
  fullName: FlowR.Core.NodeCollectionEvent.Off(System.String, EventHandler)
  type: Method
  source:
    remote:
      path: FlowR.Core/NodeCollectionEvent.cs
      branch: master
      repo: https://github.com/abbadon1334/RealFlowR.git
    id: Off
    path: FlowR.Core/NodeCollectionEvent.cs
    startLine: 27
  assemblies:
  - FlowR.Core
  namespace: FlowR.Core
  example: []
  syntax:
    content: public void Off(string eventName, EventHandler handler)
    parameters:
    - id: eventName
      type: System.String
    - id: handler
      type: EventHandler
    content.vb: Public Sub Off(eventName As String, handler As EventHandler)
  overload: FlowR.Core.NodeCollectionEvent.Off*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: FlowR.Core.NodeCollectionEvent.OnClientEventTriggered(System.String,EventArgs)
  commentId: M:FlowR.Core.NodeCollectionEvent.OnClientEventTriggered(System.String,EventArgs)
  id: OnClientEventTriggered(System.String,EventArgs)
  parent: FlowR.Core.NodeCollectionEvent
  langs:
  - csharp
  - vb
  name: OnClientEventTriggered(String, EventArgs)
  nameWithType: NodeCollectionEvent.OnClientEventTriggered(String, EventArgs)
  fullName: FlowR.Core.NodeCollectionEvent.OnClientEventTriggered(System.String, EventArgs)
  type: Method
  source:
    remote:
      path: FlowR.Core/NodeCollectionEvent.cs
      branch: master
      repo: https://github.com/abbadon1334/RealFlowR.git
    id: OnClientEventTriggered
    path: FlowR.Core/NodeCollectionEvent.cs
    startLine: 33
  assemblies:
  - FlowR.Core
  namespace: FlowR.Core
  example: []
  syntax:
    content: public void OnClientEventTriggered(string eventName, EventArgs eventArgs)
    parameters:
    - id: eventName
      type: System.String
    - id: eventArgs
      type: EventArgs
    content.vb: Public Sub OnClientEventTriggered(eventName As String, eventArgs As EventArgs)
  overload: FlowR.Core.NodeCollectionEvent.OnClientEventTriggered*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: FlowR.Core
  commentId: N:FlowR.Core
  name: FlowR.Core
  nameWithType: FlowR.Core
  fullName: FlowR.Core
- uid: FlowR.Core.NodeCollection{List{EventHandler}}
  commentId: T:FlowR.Core.NodeCollection{List{EventHandler}}
  parent: FlowR.Core
  definition: FlowR.Core.NodeCollection`1
  name: NodeCollection<List<EventHandler>>
  nameWithType: NodeCollection<List<EventHandler>>
  fullName: FlowR.Core.NodeCollection<List<EventHandler>>
  nameWithType.vb: NodeCollection(Of List(Of EventHandler))
  fullName.vb: FlowR.Core.NodeCollection(Of List(Of EventHandler))
  name.vb: NodeCollection(Of List(Of EventHandler))
  spec.csharp:
  - uid: FlowR.Core.NodeCollection`1
    name: NodeCollection
    nameWithType: NodeCollection
    fullName: FlowR.Core.NodeCollection
  - name: <
    nameWithType: <
    fullName: <
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventHandler
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: FlowR.Core.NodeCollection`1
    name: NodeCollection
    nameWithType: NodeCollection
    fullName: FlowR.Core.NodeCollection
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventHandler
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: FlowR.Core.NodeCollection{List{EventHandler}}.AfterAdded
  commentId: F:FlowR.Core.NodeCollection{List{EventHandler}}.AfterAdded
  parent: FlowR.Core.NodeCollection{List{EventHandler}}
  definition: FlowR.Core.NodeCollection`1.AfterAdded
  name: AfterAdded
  nameWithType: NodeCollection<List<EventHandler>>.AfterAdded
  fullName: FlowR.Core.NodeCollection<List<EventHandler>>.AfterAdded
  nameWithType.vb: NodeCollection(Of List(Of EventHandler)).AfterAdded
  fullName.vb: FlowR.Core.NodeCollection(Of List(Of EventHandler)).AfterAdded
- uid: FlowR.Core.NodeCollection{List{EventHandler}}.AfterChanged
  commentId: F:FlowR.Core.NodeCollection{List{EventHandler}}.AfterChanged
  parent: FlowR.Core.NodeCollection{List{EventHandler}}
  definition: FlowR.Core.NodeCollection`1.AfterChanged
  name: AfterChanged
  nameWithType: NodeCollection<List<EventHandler>>.AfterChanged
  fullName: FlowR.Core.NodeCollection<List<EventHandler>>.AfterChanged
  nameWithType.vb: NodeCollection(Of List(Of EventHandler)).AfterChanged
  fullName.vb: FlowR.Core.NodeCollection(Of List(Of EventHandler)).AfterChanged
- uid: FlowR.Core.NodeCollection{List{EventHandler}}.AfterRemoved
  commentId: F:FlowR.Core.NodeCollection{List{EventHandler}}.AfterRemoved
  parent: FlowR.Core.NodeCollection{List{EventHandler}}
  definition: FlowR.Core.NodeCollection`1.AfterRemoved
  name: AfterRemoved
  nameWithType: NodeCollection<List<EventHandler>>.AfterRemoved
  fullName: FlowR.Core.NodeCollection<List<EventHandler>>.AfterRemoved
  nameWithType.vb: NodeCollection(Of List(Of EventHandler)).AfterRemoved
  fullName.vb: FlowR.Core.NodeCollection(Of List(Of EventHandler)).AfterRemoved
- uid: FlowR.Core.NodeCollection{List{EventHandler}}.BeforeAdded
  commentId: F:FlowR.Core.NodeCollection{List{EventHandler}}.BeforeAdded
  parent: FlowR.Core.NodeCollection{List{EventHandler}}
  definition: FlowR.Core.NodeCollection`1.BeforeAdded
  name: BeforeAdded
  nameWithType: NodeCollection<List<EventHandler>>.BeforeAdded
  fullName: FlowR.Core.NodeCollection<List<EventHandler>>.BeforeAdded
  nameWithType.vb: NodeCollection(Of List(Of EventHandler)).BeforeAdded
  fullName.vb: FlowR.Core.NodeCollection(Of List(Of EventHandler)).BeforeAdded
- uid: FlowR.Core.NodeCollection{List{EventHandler}}.BeforeChanged
  commentId: F:FlowR.Core.NodeCollection{List{EventHandler}}.BeforeChanged
  parent: FlowR.Core.NodeCollection{List{EventHandler}}
  definition: FlowR.Core.NodeCollection`1.BeforeChanged
  name: BeforeChanged
  nameWithType: NodeCollection<List<EventHandler>>.BeforeChanged
  fullName: FlowR.Core.NodeCollection<List<EventHandler>>.BeforeChanged
  nameWithType.vb: NodeCollection(Of List(Of EventHandler)).BeforeChanged
  fullName.vb: FlowR.Core.NodeCollection(Of List(Of EventHandler)).BeforeChanged
- uid: FlowR.Core.NodeCollection{List{EventHandler}}.BeforeRemoved
  commentId: F:FlowR.Core.NodeCollection{List{EventHandler}}.BeforeRemoved
  parent: FlowR.Core.NodeCollection{List{EventHandler}}
  definition: FlowR.Core.NodeCollection`1.BeforeRemoved
  name: BeforeRemoved
  nameWithType: NodeCollection<List<EventHandler>>.BeforeRemoved
  fullName: FlowR.Core.NodeCollection<List<EventHandler>>.BeforeRemoved
  nameWithType.vb: NodeCollection(Of List(Of EventHandler)).BeforeRemoved
  fullName.vb: FlowR.Core.NodeCollection(Of List(Of EventHandler)).BeforeRemoved
- uid: FlowR.Core.NodeCollection{List{EventHandler}}.Owner
  commentId: P:FlowR.Core.NodeCollection{List{EventHandler}}.Owner
  parent: FlowR.Core.NodeCollection{List{EventHandler}}
  definition: FlowR.Core.NodeCollection`1.Owner
  name: Owner
  nameWithType: NodeCollection<List<EventHandler>>.Owner
  fullName: FlowR.Core.NodeCollection<List<EventHandler>>.Owner
  nameWithType.vb: NodeCollection(Of List(Of EventHandler)).Owner
  fullName.vb: FlowR.Core.NodeCollection(Of List(Of EventHandler)).Owner
- uid: FlowR.Core.NodeCollection{List{EventHandler}}.Set(System.String,List{EventHandler})
  commentId: M:FlowR.Core.NodeCollection{List{EventHandler}}.Set(System.String,List{EventHandler})
  parent: FlowR.Core.NodeCollection{List{EventHandler}}
  definition: FlowR.Core.NodeCollection`1.Set(System.String,`0)
  name: Set(String, List<EventHandler>)
  nameWithType: NodeCollection<List<EventHandler>>.Set(String, List<EventHandler>)
  fullName: FlowR.Core.NodeCollection<List<EventHandler>>.Set(System.String, List<EventHandler>)
  nameWithType.vb: NodeCollection(Of List(Of EventHandler)).Set(String, List(Of EventHandler))
  fullName.vb: FlowR.Core.NodeCollection(Of List(Of EventHandler)).Set(System.String, List(Of EventHandler))
  name.vb: Set(String, List(Of EventHandler))
  spec.csharp:
  - uid: FlowR.Core.NodeCollection`1.Set(System.String,`0)
    name: Set
    nameWithType: NodeCollection<List<EventHandler>>.Set
    fullName: FlowR.Core.NodeCollection<List<EventHandler>>.Set
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventHandler
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FlowR.Core.NodeCollection`1.Set(System.String,`0)
    name: Set
    nameWithType: NodeCollection(Of List(Of EventHandler)).Set
    fullName: FlowR.Core.NodeCollection(Of List(Of EventHandler)).Set
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventHandler
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: FlowR.Core.NodeCollection{List{EventHandler}}.Unset(System.String)
  commentId: M:FlowR.Core.NodeCollection{List{EventHandler}}.Unset(System.String)
  parent: FlowR.Core.NodeCollection{List{EventHandler}}
  definition: FlowR.Core.NodeCollection`1.Unset(System.String)
  name: Unset(String)
  nameWithType: NodeCollection<List<EventHandler>>.Unset(String)
  fullName: FlowR.Core.NodeCollection<List<EventHandler>>.Unset(System.String)
  nameWithType.vb: NodeCollection(Of List(Of EventHandler)).Unset(String)
  fullName.vb: FlowR.Core.NodeCollection(Of List(Of EventHandler)).Unset(System.String)
  spec.csharp:
  - uid: FlowR.Core.NodeCollection`1.Unset(System.String)
    name: Unset
    nameWithType: NodeCollection<List<EventHandler>>.Unset
    fullName: FlowR.Core.NodeCollection<List<EventHandler>>.Unset
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FlowR.Core.NodeCollection`1.Unset(System.String)
    name: Unset
    nameWithType: NodeCollection(Of List(Of EventHandler)).Unset
    fullName: FlowR.Core.NodeCollection(Of List(Of EventHandler)).Unset
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FlowR.Core.NodeCollection{List{EventHandler}}.Exists(System.String)
  commentId: M:FlowR.Core.NodeCollection{List{EventHandler}}.Exists(System.String)
  parent: FlowR.Core.NodeCollection{List{EventHandler}}
  definition: FlowR.Core.NodeCollection`1.Exists(System.String)
  name: Exists(String)
  nameWithType: NodeCollection<List<EventHandler>>.Exists(String)
  fullName: FlowR.Core.NodeCollection<List<EventHandler>>.Exists(System.String)
  nameWithType.vb: NodeCollection(Of List(Of EventHandler)).Exists(String)
  fullName.vb: FlowR.Core.NodeCollection(Of List(Of EventHandler)).Exists(System.String)
  spec.csharp:
  - uid: FlowR.Core.NodeCollection`1.Exists(System.String)
    name: Exists
    nameWithType: NodeCollection<List<EventHandler>>.Exists
    fullName: FlowR.Core.NodeCollection<List<EventHandler>>.Exists
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FlowR.Core.NodeCollection`1.Exists(System.String)
    name: Exists
    nameWithType: NodeCollection(Of List(Of EventHandler)).Exists
    fullName: FlowR.Core.NodeCollection(Of List(Of EventHandler)).Exists
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FlowR.Core.NodeCollection{List{EventHandler}}.Get(System.String)
  commentId: M:FlowR.Core.NodeCollection{List{EventHandler}}.Get(System.String)
  parent: FlowR.Core.NodeCollection{List{EventHandler}}
  definition: FlowR.Core.NodeCollection`1.Get(System.String)
  name: Get(String)
  nameWithType: NodeCollection<List<EventHandler>>.Get(String)
  fullName: FlowR.Core.NodeCollection<List<EventHandler>>.Get(System.String)
  nameWithType.vb: NodeCollection(Of List(Of EventHandler)).Get(String)
  fullName.vb: FlowR.Core.NodeCollection(Of List(Of EventHandler)).Get(System.String)
  spec.csharp:
  - uid: FlowR.Core.NodeCollection`1.Get(System.String)
    name: Get
    nameWithType: NodeCollection<List<EventHandler>>.Get
    fullName: FlowR.Core.NodeCollection<List<EventHandler>>.Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FlowR.Core.NodeCollection`1.Get(System.String)
    name: Get
    nameWithType: NodeCollection(Of List(Of EventHandler)).Get
    fullName: FlowR.Core.NodeCollection(Of List(Of EventHandler)).Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FlowR.Core.NodeCollection{List{EventHandler}}.Count
  commentId: M:FlowR.Core.NodeCollection{List{EventHandler}}.Count
  parent: FlowR.Core.NodeCollection{List{EventHandler}}
  definition: FlowR.Core.NodeCollection`1.Count
  name: Count()
  nameWithType: NodeCollection<List<EventHandler>>.Count()
  fullName: FlowR.Core.NodeCollection<List<EventHandler>>.Count()
  nameWithType.vb: NodeCollection(Of List(Of EventHandler)).Count()
  fullName.vb: FlowR.Core.NodeCollection(Of List(Of EventHandler)).Count()
  spec.csharp:
  - uid: FlowR.Core.NodeCollection`1.Count
    name: Count
    nameWithType: NodeCollection<List<EventHandler>>.Count
    fullName: FlowR.Core.NodeCollection<List<EventHandler>>.Count
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FlowR.Core.NodeCollection`1.Count
    name: Count
    nameWithType: NodeCollection(Of List(Of EventHandler)).Count
    fullName: FlowR.Core.NodeCollection(Of List(Of EventHandler)).Count
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: FlowR.Core.NodeCollection{List{EventHandler}}.GetFirst
  commentId: M:FlowR.Core.NodeCollection{List{EventHandler}}.GetFirst
  parent: FlowR.Core.NodeCollection{List{EventHandler}}
  definition: FlowR.Core.NodeCollection`1.GetFirst
  name: GetFirst()
  nameWithType: NodeCollection<List<EventHandler>>.GetFirst()
  fullName: FlowR.Core.NodeCollection<List<EventHandler>>.GetFirst()
  nameWithType.vb: NodeCollection(Of List(Of EventHandler)).GetFirst()
  fullName.vb: FlowR.Core.NodeCollection(Of List(Of EventHandler)).GetFirst()
  spec.csharp:
  - uid: FlowR.Core.NodeCollection`1.GetFirst
    name: GetFirst
    nameWithType: NodeCollection<List<EventHandler>>.GetFirst
    fullName: FlowR.Core.NodeCollection<List<EventHandler>>.GetFirst
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FlowR.Core.NodeCollection`1.GetFirst
    name: GetFirst
    nameWithType: NodeCollection(Of List(Of EventHandler)).GetFirst
    fullName: FlowR.Core.NodeCollection(Of List(Of EventHandler)).GetFirst
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: FlowR.Core.NodeCollection{List{EventHandler}}.GetLast
  commentId: M:FlowR.Core.NodeCollection{List{EventHandler}}.GetLast
  parent: FlowR.Core.NodeCollection{List{EventHandler}}
  definition: FlowR.Core.NodeCollection`1.GetLast
  name: GetLast()
  nameWithType: NodeCollection<List<EventHandler>>.GetLast()
  fullName: FlowR.Core.NodeCollection<List<EventHandler>>.GetLast()
  nameWithType.vb: NodeCollection(Of List(Of EventHandler)).GetLast()
  fullName.vb: FlowR.Core.NodeCollection(Of List(Of EventHandler)).GetLast()
  spec.csharp:
  - uid: FlowR.Core.NodeCollection`1.GetLast
    name: GetLast
    nameWithType: NodeCollection<List<EventHandler>>.GetLast
    fullName: FlowR.Core.NodeCollection<List<EventHandler>>.GetLast
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FlowR.Core.NodeCollection`1.GetLast
    name: GetLast
    nameWithType: NodeCollection(Of List(Of EventHandler)).GetLast
    fullName: FlowR.Core.NodeCollection(Of List(Of EventHandler)).GetLast
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: FlowR.Core.NodeCollection{List{EventHandler}}.ToDictionary
  commentId: M:FlowR.Core.NodeCollection{List{EventHandler}}.ToDictionary
  parent: FlowR.Core.NodeCollection{List{EventHandler}}
  definition: FlowR.Core.NodeCollection`1.ToDictionary
  name: ToDictionary()
  nameWithType: NodeCollection<List<EventHandler>>.ToDictionary()
  fullName: FlowR.Core.NodeCollection<List<EventHandler>>.ToDictionary()
  nameWithType.vb: NodeCollection(Of List(Of EventHandler)).ToDictionary()
  fullName.vb: FlowR.Core.NodeCollection(Of List(Of EventHandler)).ToDictionary()
  spec.csharp:
  - uid: FlowR.Core.NodeCollection`1.ToDictionary
    name: ToDictionary
    nameWithType: NodeCollection<List<EventHandler>>.ToDictionary
    fullName: FlowR.Core.NodeCollection<List<EventHandler>>.ToDictionary
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FlowR.Core.NodeCollection`1.ToDictionary
    name: ToDictionary
    nameWithType: NodeCollection(Of List(Of EventHandler)).ToDictionary
    fullName: FlowR.Core.NodeCollection(Of List(Of EventHandler)).ToDictionary
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: FlowR.Core.NodeCollection`1
  commentId: T:FlowR.Core.NodeCollection`1
  name: NodeCollection<T>
  nameWithType: NodeCollection<T>
  fullName: FlowR.Core.NodeCollection<T>
  nameWithType.vb: NodeCollection(Of T)
  fullName.vb: FlowR.Core.NodeCollection(Of T)
  name.vb: NodeCollection(Of T)
  spec.csharp:
  - uid: FlowR.Core.NodeCollection`1
    name: NodeCollection
    nameWithType: NodeCollection
    fullName: FlowR.Core.NodeCollection
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: FlowR.Core.NodeCollection`1
    name: NodeCollection
    nameWithType: NodeCollection
    fullName: FlowR.Core.NodeCollection
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: FlowR.Core.NodeCollection`1.AfterAdded
  commentId: F:FlowR.Core.NodeCollection`1.AfterAdded
  name: AfterAdded
  nameWithType: NodeCollection<T>.AfterAdded
  fullName: FlowR.Core.NodeCollection<T>.AfterAdded
  nameWithType.vb: NodeCollection(Of T).AfterAdded
  fullName.vb: FlowR.Core.NodeCollection(Of T).AfterAdded
- uid: FlowR.Core.NodeCollection`1.AfterChanged
  commentId: F:FlowR.Core.NodeCollection`1.AfterChanged
  name: AfterChanged
  nameWithType: NodeCollection<T>.AfterChanged
  fullName: FlowR.Core.NodeCollection<T>.AfterChanged
  nameWithType.vb: NodeCollection(Of T).AfterChanged
  fullName.vb: FlowR.Core.NodeCollection(Of T).AfterChanged
- uid: FlowR.Core.NodeCollection`1.AfterRemoved
  commentId: F:FlowR.Core.NodeCollection`1.AfterRemoved
  name: AfterRemoved
  nameWithType: NodeCollection<T>.AfterRemoved
  fullName: FlowR.Core.NodeCollection<T>.AfterRemoved
  nameWithType.vb: NodeCollection(Of T).AfterRemoved
  fullName.vb: FlowR.Core.NodeCollection(Of T).AfterRemoved
- uid: FlowR.Core.NodeCollection`1.BeforeAdded
  commentId: F:FlowR.Core.NodeCollection`1.BeforeAdded
  name: BeforeAdded
  nameWithType: NodeCollection<T>.BeforeAdded
  fullName: FlowR.Core.NodeCollection<T>.BeforeAdded
  nameWithType.vb: NodeCollection(Of T).BeforeAdded
  fullName.vb: FlowR.Core.NodeCollection(Of T).BeforeAdded
- uid: FlowR.Core.NodeCollection`1.BeforeChanged
  commentId: F:FlowR.Core.NodeCollection`1.BeforeChanged
  name: BeforeChanged
  nameWithType: NodeCollection<T>.BeforeChanged
  fullName: FlowR.Core.NodeCollection<T>.BeforeChanged
  nameWithType.vb: NodeCollection(Of T).BeforeChanged
  fullName.vb: FlowR.Core.NodeCollection(Of T).BeforeChanged
- uid: FlowR.Core.NodeCollection`1.BeforeRemoved
  commentId: F:FlowR.Core.NodeCollection`1.BeforeRemoved
  name: BeforeRemoved
  nameWithType: NodeCollection<T>.BeforeRemoved
  fullName: FlowR.Core.NodeCollection<T>.BeforeRemoved
  nameWithType.vb: NodeCollection(Of T).BeforeRemoved
  fullName.vb: FlowR.Core.NodeCollection(Of T).BeforeRemoved
- uid: FlowR.Core.NodeCollection`1.Owner
  commentId: P:FlowR.Core.NodeCollection`1.Owner
  name: Owner
  nameWithType: NodeCollection<T>.Owner
  fullName: FlowR.Core.NodeCollection<T>.Owner
  nameWithType.vb: NodeCollection(Of T).Owner
  fullName.vb: FlowR.Core.NodeCollection(Of T).Owner
- uid: FlowR.Core.NodeCollection`1.Set(System.String,`0)
  commentId: M:FlowR.Core.NodeCollection`1.Set(System.String,`0)
  isExternal: true
  name: Set(String, T)
  nameWithType: NodeCollection<T>.Set(String, T)
  fullName: FlowR.Core.NodeCollection<T>.Set(System.String, T)
  nameWithType.vb: NodeCollection(Of T).Set(String, T)
  fullName.vb: FlowR.Core.NodeCollection(Of T).Set(System.String, T)
  spec.csharp:
  - uid: FlowR.Core.NodeCollection`1.Set(System.String,`0)
    name: Set
    nameWithType: NodeCollection<T>.Set
    fullName: FlowR.Core.NodeCollection<T>.Set
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FlowR.Core.NodeCollection`1.Set(System.String,`0)
    name: Set
    nameWithType: NodeCollection(Of T).Set
    fullName: FlowR.Core.NodeCollection(Of T).Set
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: FlowR.Core.NodeCollection`1.Unset(System.String)
  commentId: M:FlowR.Core.NodeCollection`1.Unset(System.String)
  isExternal: true
  name: Unset(String)
  nameWithType: NodeCollection<T>.Unset(String)
  fullName: FlowR.Core.NodeCollection<T>.Unset(System.String)
  nameWithType.vb: NodeCollection(Of T).Unset(String)
  fullName.vb: FlowR.Core.NodeCollection(Of T).Unset(System.String)
  spec.csharp:
  - uid: FlowR.Core.NodeCollection`1.Unset(System.String)
    name: Unset
    nameWithType: NodeCollection<T>.Unset
    fullName: FlowR.Core.NodeCollection<T>.Unset
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FlowR.Core.NodeCollection`1.Unset(System.String)
    name: Unset
    nameWithType: NodeCollection(Of T).Unset
    fullName: FlowR.Core.NodeCollection(Of T).Unset
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FlowR.Core.NodeCollection`1.Exists(System.String)
  commentId: M:FlowR.Core.NodeCollection`1.Exists(System.String)
  isExternal: true
  name: Exists(String)
  nameWithType: NodeCollection<T>.Exists(String)
  fullName: FlowR.Core.NodeCollection<T>.Exists(System.String)
  nameWithType.vb: NodeCollection(Of T).Exists(String)
  fullName.vb: FlowR.Core.NodeCollection(Of T).Exists(System.String)
  spec.csharp:
  - uid: FlowR.Core.NodeCollection`1.Exists(System.String)
    name: Exists
    nameWithType: NodeCollection<T>.Exists
    fullName: FlowR.Core.NodeCollection<T>.Exists
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FlowR.Core.NodeCollection`1.Exists(System.String)
    name: Exists
    nameWithType: NodeCollection(Of T).Exists
    fullName: FlowR.Core.NodeCollection(Of T).Exists
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FlowR.Core.NodeCollection`1.Get(System.String)
  commentId: M:FlowR.Core.NodeCollection`1.Get(System.String)
  isExternal: true
  name: Get(String)
  nameWithType: NodeCollection<T>.Get(String)
  fullName: FlowR.Core.NodeCollection<T>.Get(System.String)
  nameWithType.vb: NodeCollection(Of T).Get(String)
  fullName.vb: FlowR.Core.NodeCollection(Of T).Get(System.String)
  spec.csharp:
  - uid: FlowR.Core.NodeCollection`1.Get(System.String)
    name: Get
    nameWithType: NodeCollection<T>.Get
    fullName: FlowR.Core.NodeCollection<T>.Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FlowR.Core.NodeCollection`1.Get(System.String)
    name: Get
    nameWithType: NodeCollection(Of T).Get
    fullName: FlowR.Core.NodeCollection(Of T).Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FlowR.Core.NodeCollection`1.Count
  commentId: M:FlowR.Core.NodeCollection`1.Count
  name: Count()
  nameWithType: NodeCollection<T>.Count()
  fullName: FlowR.Core.NodeCollection<T>.Count()
  nameWithType.vb: NodeCollection(Of T).Count()
  fullName.vb: FlowR.Core.NodeCollection(Of T).Count()
  spec.csharp:
  - uid: FlowR.Core.NodeCollection`1.Count
    name: Count
    nameWithType: NodeCollection<T>.Count
    fullName: FlowR.Core.NodeCollection<T>.Count
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FlowR.Core.NodeCollection`1.Count
    name: Count
    nameWithType: NodeCollection(Of T).Count
    fullName: FlowR.Core.NodeCollection(Of T).Count
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: FlowR.Core.NodeCollection`1.GetFirst
  commentId: M:FlowR.Core.NodeCollection`1.GetFirst
  name: GetFirst()
  nameWithType: NodeCollection<T>.GetFirst()
  fullName: FlowR.Core.NodeCollection<T>.GetFirst()
  nameWithType.vb: NodeCollection(Of T).GetFirst()
  fullName.vb: FlowR.Core.NodeCollection(Of T).GetFirst()
  spec.csharp:
  - uid: FlowR.Core.NodeCollection`1.GetFirst
    name: GetFirst
    nameWithType: NodeCollection<T>.GetFirst
    fullName: FlowR.Core.NodeCollection<T>.GetFirst
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FlowR.Core.NodeCollection`1.GetFirst
    name: GetFirst
    nameWithType: NodeCollection(Of T).GetFirst
    fullName: FlowR.Core.NodeCollection(Of T).GetFirst
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: FlowR.Core.NodeCollection`1.GetLast
  commentId: M:FlowR.Core.NodeCollection`1.GetLast
  name: GetLast()
  nameWithType: NodeCollection<T>.GetLast()
  fullName: FlowR.Core.NodeCollection<T>.GetLast()
  nameWithType.vb: NodeCollection(Of T).GetLast()
  fullName.vb: FlowR.Core.NodeCollection(Of T).GetLast()
  spec.csharp:
  - uid: FlowR.Core.NodeCollection`1.GetLast
    name: GetLast
    nameWithType: NodeCollection<T>.GetLast
    fullName: FlowR.Core.NodeCollection<T>.GetLast
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FlowR.Core.NodeCollection`1.GetLast
    name: GetLast
    nameWithType: NodeCollection(Of T).GetLast
    fullName: FlowR.Core.NodeCollection(Of T).GetLast
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: FlowR.Core.NodeCollection`1.ToDictionary
  commentId: M:FlowR.Core.NodeCollection`1.ToDictionary
  name: ToDictionary()
  nameWithType: NodeCollection<T>.ToDictionary()
  fullName: FlowR.Core.NodeCollection<T>.ToDictionary()
  nameWithType.vb: NodeCollection(Of T).ToDictionary()
  fullName.vb: FlowR.Core.NodeCollection(Of T).ToDictionary()
  spec.csharp:
  - uid: FlowR.Core.NodeCollection`1.ToDictionary
    name: ToDictionary
    nameWithType: NodeCollection<T>.ToDictionary
    fullName: FlowR.Core.NodeCollection<T>.ToDictionary
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FlowR.Core.NodeCollection`1.ToDictionary
    name: ToDictionary
    nameWithType: NodeCollection(Of T).ToDictionary
    fullName: FlowR.Core.NodeCollection(Of T).ToDictionary
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: FlowR.Core.NodeCollectionEvent.#ctor*
  commentId: Overload:FlowR.Core.NodeCollectionEvent.#ctor
  name: NodeCollectionEvent
  nameWithType: NodeCollectionEvent.NodeCollectionEvent
  fullName: FlowR.Core.NodeCollectionEvent.NodeCollectionEvent
- uid: FlowR.Core.Node
  commentId: T:FlowR.Core.Node
  parent: FlowR.Core
  name: Node
  nameWithType: Node
  fullName: FlowR.Core.Node
- uid: FlowR.Core.Component`1.On(System.String,EventHandler)
  commentId: M:FlowR.Core.Component`1.On(System.String,EventHandler)
  isExternal: true
  name: On(String, EventHandler)
  nameWithType: Component<T>.On(String, EventHandler)
  fullName: FlowR.Core.Component<T>.On(System.String, EventHandler)
  nameWithType.vb: Component(Of T).On(String, EventHandler)
  fullName.vb: FlowR.Core.Component(Of T).On(System.String, EventHandler)
  spec.csharp:
  - uid: FlowR.Core.Component`1.On(System.String,EventHandler)
    name: On
    nameWithType: Component<T>.On
    fullName: FlowR.Core.Component<T>.On
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventHandler
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FlowR.Core.Component`1.On(System.String,EventHandler)
    name: On
    nameWithType: Component(Of T).On
    fullName: FlowR.Core.Component(Of T).On
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventHandler
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FlowR.Core.NodeCollectionEvent.On*
  commentId: Overload:FlowR.Core.NodeCollectionEvent.On
  name: On
  nameWithType: NodeCollectionEvent.On
  fullName: FlowR.Core.NodeCollectionEvent.On
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventHandler
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: EventHandler
- uid: FlowR.Core.NodeCollectionEvent.Off*
  commentId: Overload:FlowR.Core.NodeCollectionEvent.Off
  name: Off
  nameWithType: NodeCollectionEvent.Off
  fullName: FlowR.Core.NodeCollectionEvent.Off
- uid: FlowR.Core.Node.OnClientEventTriggered(System.String,FlowR.Core.Message.MessageEventArgs)
  commentId: M:FlowR.Core.Node.OnClientEventTriggered(System.String,FlowR.Core.Message.MessageEventArgs)
  parent: FlowR.Core.Node
  isExternal: true
  name: OnClientEventTriggered(String, MessageEventArgs)
  nameWithType: Node.OnClientEventTriggered(String, MessageEventArgs)
  fullName: FlowR.Core.Node.OnClientEventTriggered(System.String, FlowR.Core.Message.MessageEventArgs)
  spec.csharp:
  - uid: FlowR.Core.Node.OnClientEventTriggered(System.String,FlowR.Core.Message.MessageEventArgs)
    name: OnClientEventTriggered
    nameWithType: Node.OnClientEventTriggered
    fullName: FlowR.Core.Node.OnClientEventTriggered
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: FlowR.Core.Message.MessageEventArgs
    name: MessageEventArgs
    nameWithType: MessageEventArgs
    fullName: FlowR.Core.Message.MessageEventArgs
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FlowR.Core.Node.OnClientEventTriggered(System.String,FlowR.Core.Message.MessageEventArgs)
    name: OnClientEventTriggered
    nameWithType: Node.OnClientEventTriggered
    fullName: FlowR.Core.Node.OnClientEventTriggered
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: FlowR.Core.Message.MessageEventArgs
    name: MessageEventArgs
    nameWithType: MessageEventArgs
    fullName: FlowR.Core.Message.MessageEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: FlowR.Core.NodeCollectionEvent.OnClientEventTriggered*
  commentId: Overload:FlowR.Core.NodeCollectionEvent.OnClientEventTriggered
  name: OnClientEventTriggered
  nameWithType: NodeCollectionEvent.OnClientEventTriggered
  fullName: FlowR.Core.NodeCollectionEvent.OnClientEventTriggered
- uid: EventArgs
  commentId: '!:EventArgs'
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: EventArgs
