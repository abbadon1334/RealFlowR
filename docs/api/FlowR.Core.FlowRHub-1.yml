### YamlMime:ManagedReference
items:
- uid: FlowR.Core.FlowRHub`1
  commentId: T:FlowR.Core.FlowRHub`1
  id: FlowRHub`1
  parent: FlowR.Core
  children:
  - FlowR.Core.FlowRHub`1.#ctor(FlowR.Core.FlowRService{`0})
  - FlowR.Core.FlowRHub`1.ClientEventTriggered(System.String)
  - FlowR.Core.FlowRHub`1.ClientMessageResponse(System.String)
  - FlowR.Core.FlowRHub`1.OnConnectedAsync
  - FlowR.Core.FlowRHub`1.OnDisconnectedAsync(Exception)
  langs:
  - csharp
  - vb
  name: FlowRHub<T>
  nameWithType: FlowRHub<T>
  fullName: FlowR.Core.FlowRHub<T>
  type: Class
  source:
    remote:
      path: FlowR.Core/FlowRHub.cs
      branch: master
      repo: https://github.com/abbadon1334/RealFlowR.git
    id: FlowRHub
    path: FlowR.Core/FlowRHub.cs
    startLine: 11
  assemblies:
  - FlowR.Core
  namespace: FlowR.Core
  summary: "\nFlowR Hub Service\n"
  example: []
  syntax:
    content: 'public class FlowRHub<T> : Hub where T : Application'
    typeParameters:
    - id: T
      description: ''
    content.vb: >-
      Public Class FlowRHub(Of T As Application)

          Inherits Hub
  inheritance:
  - System.Object
  nameWithType.vb: FlowRHub(Of T)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: FlowR.Core.FlowRHub(Of T)
  name.vb: FlowRHub(Of T)
- uid: FlowR.Core.FlowRHub`1.#ctor(FlowR.Core.FlowRService{`0})
  commentId: M:FlowR.Core.FlowRHub`1.#ctor(FlowR.Core.FlowRService{`0})
  id: '#ctor(FlowR.Core.FlowRService{`0})'
  parent: FlowR.Core.FlowRHub`1
  langs:
  - csharp
  - vb
  name: FlowRHub(FlowRService<T>)
  nameWithType: FlowRHub<T>.FlowRHub(FlowRService<T>)
  fullName: FlowR.Core.FlowRHub<T>.FlowRHub(FlowR.Core.FlowRService<T>)
  type: Constructor
  source:
    remote:
      path: FlowR.Core/FlowRHub.cs
      branch: master
      repo: https://github.com/abbadon1334/RealFlowR.git
    id: .ctor
    path: FlowR.Core/FlowRHub.cs
    startLine: 19
  assemblies:
  - FlowR.Core
  namespace: FlowR.Core
  summary: "\nConstructor.\n"
  example: []
  syntax:
    content: public FlowRHub(FlowRService<T> applicationFlowRService)
    parameters:
    - id: applicationFlowRService
      type: FlowR.Core.FlowRService{{T}}
      description: ''
    content.vb: Public Sub New(applicationFlowRService As FlowRService(Of T))
  overload: FlowR.Core.FlowRHub`1.#ctor*
  nameWithType.vb: FlowRHub(Of T).FlowRHub(FlowRService(Of T))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: FlowR.Core.FlowRHub(Of T).FlowRHub(FlowR.Core.FlowRService(Of T))
  name.vb: FlowRHub(FlowRService(Of T))
- uid: FlowR.Core.FlowRHub`1.ClientEventTriggered(System.String)
  commentId: M:FlowR.Core.FlowRHub`1.ClientEventTriggered(System.String)
  id: ClientEventTriggered(System.String)
  parent: FlowR.Core.FlowRHub`1
  langs:
  - csharp
  - vb
  name: ClientEventTriggered(String)
  nameWithType: FlowRHub<T>.ClientEventTriggered(String)
  fullName: FlowR.Core.FlowRHub<T>.ClientEventTriggered(System.String)
  type: Method
  source:
    remote:
      path: FlowR.Core/FlowRHub.cs
      branch: master
      repo: https://github.com/abbadon1334/RealFlowR.git
    id: ClientEventTriggered
    path: FlowR.Core/FlowRHub.cs
    startLine: 29
  assemblies:
  - FlowR.Core
  namespace: FlowR.Core
  summary: "\nCalled from client whenever an event fires on a Node which are listen for that specific event.\n"
  example: []
  syntax:
    content: public void ClientEventTriggered(string message)
    parameters:
    - id: message
      type: System.String
      description: ''
    content.vb: Public Sub ClientEventTriggered(message As String)
  overload: FlowR.Core.FlowRHub`1.ClientEventTriggered*
  see:
  - linkId: FlowR.Core.Component`1.On(System.String,EventHandler)
    commentId: M:FlowR.Core.Component`1.On(System.String,EventHandler)
  nameWithType.vb: FlowRHub(Of T).ClientEventTriggered(String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: FlowR.Core.FlowRHub(Of T).ClientEventTriggered(System.String)
- uid: FlowR.Core.FlowRHub`1.ClientMessageResponse(System.String)
  commentId: M:FlowR.Core.FlowRHub`1.ClientMessageResponse(System.String)
  id: ClientMessageResponse(System.String)
  parent: FlowR.Core.FlowRHub`1
  langs:
  - csharp
  - vb
  name: ClientMessageResponse(String)
  nameWithType: FlowRHub<T>.ClientMessageResponse(String)
  fullName: FlowR.Core.FlowRHub<T>.ClientMessageResponse(System.String)
  type: Method
  source:
    remote:
      path: FlowR.Core/FlowRHub.cs
      branch: master
      repo: https://github.com/abbadon1334/RealFlowR.git
    id: ClientMessageResponse
    path: FlowR.Core/FlowRHub.cs
    startLine: 42
  assemblies:
  - FlowR.Core
  namespace: FlowR.Core
  summary: "\nCalled from client when a previous message request a response\n"
  example: []
  syntax:
    content: public void ClientMessageResponse(string message)
    parameters:
    - id: message
      type: System.String
      description: ''
    content.vb: Public Sub ClientMessageResponse(message As String)
  overload: FlowR.Core.FlowRHub`1.ClientMessageResponse*
  see:
  - linkId: FlowR.Core.Node.CallClientMethodWaitResponse(System.String,System.String[])
    commentId: M:FlowR.Core.Node.CallClientMethodWaitResponse(System.String,System.String[])
  - linkId: FlowR.Core.ApplicationCommunication.CallGlobalMethodWaitResponse(System.String,System.String[])
    commentId: M:FlowR.Core.ApplicationCommunication.CallGlobalMethodWaitResponse(System.String,System.String[])
  nameWithType.vb: FlowRHub(Of T).ClientMessageResponse(String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: FlowR.Core.FlowRHub(Of T).ClientMessageResponse(System.String)
- uid: FlowR.Core.FlowRHub`1.OnConnectedAsync
  commentId: M:FlowR.Core.FlowRHub`1.OnConnectedAsync
  id: OnConnectedAsync
  parent: FlowR.Core.FlowRHub`1
  langs:
  - csharp
  - vb
  name: OnConnectedAsync()
  nameWithType: FlowRHub<T>.OnConnectedAsync()
  fullName: FlowR.Core.FlowRHub<T>.OnConnectedAsync()
  type: Method
  source:
    remote:
      path: FlowR.Core/FlowRHub.cs
      branch: master
      repo: https://github.com/abbadon1334/RealFlowR.git
    id: OnConnectedAsync
    path: FlowR.Core/FlowRHub.cs
    startLine: 50
  assemblies:
  - FlowR.Core
  namespace: FlowR.Core
  example: []
  syntax:
    content: public override Task OnConnectedAsync()
    return:
      type: Task
    content.vb: Public Overrides Function OnConnectedAsync As Task
  overload: FlowR.Core.FlowRHub`1.OnConnectedAsync*
  nameWithType.vb: FlowRHub(Of T).OnConnectedAsync()
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: FlowR.Core.FlowRHub(Of T).OnConnectedAsync()
- uid: FlowR.Core.FlowRHub`1.OnDisconnectedAsync(Exception)
  commentId: M:FlowR.Core.FlowRHub`1.OnDisconnectedAsync(Exception)
  id: OnDisconnectedAsync(Exception)
  parent: FlowR.Core.FlowRHub`1
  langs:
  - csharp
  - vb
  name: OnDisconnectedAsync(Exception)
  nameWithType: FlowRHub<T>.OnDisconnectedAsync(Exception)
  fullName: FlowR.Core.FlowRHub<T>.OnDisconnectedAsync(Exception)
  type: Method
  source:
    remote:
      path: FlowR.Core/FlowRHub.cs
      branch: master
      repo: https://github.com/abbadon1334/RealFlowR.git
    id: OnDisconnectedAsync
    path: FlowR.Core/FlowRHub.cs
    startLine: 57
  assemblies:
  - FlowR.Core
  namespace: FlowR.Core
  example: []
  syntax:
    content: public override Task OnDisconnectedAsync(Exception e)
    parameters:
    - id: e
      type: Exception
    return:
      type: Task
    content.vb: Public Overrides Function OnDisconnectedAsync(e As Exception) As Task
  overload: FlowR.Core.FlowRHub`1.OnDisconnectedAsync*
  nameWithType.vb: FlowRHub(Of T).OnDisconnectedAsync(Exception)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: FlowR.Core.FlowRHub(Of T).OnDisconnectedAsync(Exception)
references:
- uid: FlowR.Core
  commentId: N:FlowR.Core
  name: FlowR.Core
  nameWithType: FlowR.Core
  fullName: FlowR.Core
- uid: FlowR.Core.FlowRHub`1.#ctor*
  commentId: Overload:FlowR.Core.FlowRHub`1.#ctor
  name: FlowRHub
  nameWithType: FlowRHub<T>.FlowRHub
  fullName: FlowR.Core.FlowRHub<T>.FlowRHub
  nameWithType.vb: FlowRHub(Of T).FlowRHub
  fullName.vb: FlowR.Core.FlowRHub(Of T).FlowRHub
- uid: FlowR.Core.FlowRService{{T}}
  commentId: T:FlowR.Core.FlowRService{`0}
  parent: FlowR.Core
  definition: FlowR.Core.FlowRService`1
  name: FlowRService<T>
  nameWithType: FlowRService<T>
  fullName: FlowR.Core.FlowRService<T>
  nameWithType.vb: FlowRService(Of T)
  fullName.vb: FlowR.Core.FlowRService(Of T)
  name.vb: FlowRService(Of T)
  spec.csharp:
  - uid: FlowR.Core.FlowRService`1
    name: FlowRService
    nameWithType: FlowRService
    fullName: FlowR.Core.FlowRService
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: FlowR.Core.FlowRService`1
    name: FlowRService
    nameWithType: FlowRService
    fullName: FlowR.Core.FlowRService
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: FlowR.Core.FlowRService`1
  commentId: T:FlowR.Core.FlowRService`1
  name: FlowRService<T>
  nameWithType: FlowRService<T>
  fullName: FlowR.Core.FlowRService<T>
  nameWithType.vb: FlowRService(Of T)
  fullName.vb: FlowR.Core.FlowRService(Of T)
  name.vb: FlowRService(Of T)
  spec.csharp:
  - uid: FlowR.Core.FlowRService`1
    name: FlowRService
    nameWithType: FlowRService
    fullName: FlowR.Core.FlowRService
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: FlowR.Core.FlowRService`1
    name: FlowRService
    nameWithType: FlowRService
    fullName: FlowR.Core.FlowRService
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: FlowR.Core.Component`1.On(System.String,EventHandler)
  commentId: M:FlowR.Core.Component`1.On(System.String,EventHandler)
  isExternal: true
  name: On(String, EventHandler)
  nameWithType: Component<T>.On(String, EventHandler)
  fullName: FlowR.Core.Component<T>.On(System.String, EventHandler)
  nameWithType.vb: Component(Of T).On(String, EventHandler)
  fullName.vb: FlowR.Core.Component(Of T).On(System.String, EventHandler)
  spec.csharp:
  - uid: FlowR.Core.Component`1.On(System.String,EventHandler)
    name: On
    nameWithType: Component<T>.On
    fullName: FlowR.Core.Component<T>.On
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventHandler
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FlowR.Core.Component`1.On(System.String,EventHandler)
    name: On
    nameWithType: Component(Of T).On
    fullName: FlowR.Core.Component(Of T).On
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventHandler
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FlowR.Core.FlowRHub`1.ClientEventTriggered*
  commentId: Overload:FlowR.Core.FlowRHub`1.ClientEventTriggered
  name: ClientEventTriggered
  nameWithType: FlowRHub<T>.ClientEventTriggered
  fullName: FlowR.Core.FlowRHub<T>.ClientEventTriggered
  nameWithType.vb: FlowRHub(Of T).ClientEventTriggered
  fullName.vb: FlowR.Core.FlowRHub(Of T).ClientEventTriggered
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: FlowR.Core.Node.CallClientMethodWaitResponse(System.String,System.String[])
  commentId: M:FlowR.Core.Node.CallClientMethodWaitResponse(System.String,System.String[])
  parent: FlowR.Core.Node
  isExternal: true
  name: CallClientMethodWaitResponse(String, String[])
  nameWithType: Node.CallClientMethodWaitResponse(String, String[])
  fullName: FlowR.Core.Node.CallClientMethodWaitResponse(System.String, System.String[])
  nameWithType.vb: Node.CallClientMethodWaitResponse(String, String())
  fullName.vb: FlowR.Core.Node.CallClientMethodWaitResponse(System.String, System.String())
  name.vb: CallClientMethodWaitResponse(String, String())
  spec.csharp:
  - uid: FlowR.Core.Node.CallClientMethodWaitResponse(System.String,System.String[])
    name: CallClientMethodWaitResponse
    nameWithType: Node.CallClientMethodWaitResponse
    fullName: FlowR.Core.Node.CallClientMethodWaitResponse
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FlowR.Core.Node.CallClientMethodWaitResponse(System.String,System.String[])
    name: CallClientMethodWaitResponse
    nameWithType: Node.CallClientMethodWaitResponse
    fullName: FlowR.Core.Node.CallClientMethodWaitResponse
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: FlowR.Core.ApplicationCommunication.CallGlobalMethodWaitResponse(System.String,System.String[])
  commentId: M:FlowR.Core.ApplicationCommunication.CallGlobalMethodWaitResponse(System.String,System.String[])
  isExternal: true
- uid: FlowR.Core.FlowRHub`1.ClientMessageResponse*
  commentId: Overload:FlowR.Core.FlowRHub`1.ClientMessageResponse
  name: ClientMessageResponse
  nameWithType: FlowRHub<T>.ClientMessageResponse
  fullName: FlowR.Core.FlowRHub<T>.ClientMessageResponse
  nameWithType.vb: FlowRHub(Of T).ClientMessageResponse
  fullName.vb: FlowR.Core.FlowRHub(Of T).ClientMessageResponse
- uid: FlowR.Core.Node
  commentId: T:FlowR.Core.Node
  parent: FlowR.Core
  name: Node
  nameWithType: Node
  fullName: FlowR.Core.Node
- uid: FlowR.Core.FlowRHub`1.OnConnectedAsync*
  commentId: Overload:FlowR.Core.FlowRHub`1.OnConnectedAsync
  name: OnConnectedAsync
  nameWithType: FlowRHub<T>.OnConnectedAsync
  fullName: FlowR.Core.FlowRHub<T>.OnConnectedAsync
  nameWithType.vb: FlowRHub(Of T).OnConnectedAsync
  fullName.vb: FlowR.Core.FlowRHub(Of T).OnConnectedAsync
- uid: Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: Task
- uid: FlowR.Core.FlowRHub`1.OnDisconnectedAsync*
  commentId: Overload:FlowR.Core.FlowRHub`1.OnDisconnectedAsync
  name: OnDisconnectedAsync
  nameWithType: FlowRHub<T>.OnDisconnectedAsync
  fullName: FlowR.Core.FlowRHub<T>.OnDisconnectedAsync
  nameWithType.vb: FlowRHub(Of T).OnDisconnectedAsync
  fullName.vb: FlowR.Core.FlowRHub(Of T).OnDisconnectedAsync
- uid: Exception
  commentId: '!:Exception'
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: Exception
