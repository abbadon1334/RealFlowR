### YamlMime:ManagedReference
items:
- uid: FlowR.Core.Application
  commentId: T:FlowR.Core.Application
  id: Application
  parent: FlowR.Core
  children:
  - FlowR.Core.Application.#ctor(System.String,Microsoft.AspNetCore.SignalR.IClientProxy,Microsoft.Extensions.Logging.ILogger{FlowR.Core.Application})
  - FlowR.Core.Application.AddJavascriptResource(System.String)
  - FlowR.Core.Application.AddStylesheetResource(System.String)
  - FlowR.Core.Application.AddTimer(System.Int32,System.EventHandler,System.Boolean)
  - FlowR.Core.Application.CallGlobalMethod(System.String,System.String[])
  - FlowR.Core.Application.CallGlobalMethodWaitResponse(System.String,System.String[])
  - FlowR.Core.Application.CancelTimer(FlowR.Core.ApplicationTimer)
  - FlowR.Core.Application.Communication
  - FlowR.Core.Application.GetGlobalProperty(System.String)
  - FlowR.Core.Application.GetLogger
  - FlowR.Core.Application.OnClientEventTriggered(FlowR.Core.Message.MessageEvent)
  - FlowR.Core.Application.RegisterComponent(FlowR.Core.INode)
  - FlowR.Core.Application.RootElement
  - FlowR.Core.Application.RootElementId
  - FlowR.Core.Application.SetGlobalProperty(System.String,System.String)
  - FlowR.Core.Application.UnregisterComponent(FlowR.Core.INode)
  langs:
  - csharp
  - vb
  name: Application
  nameWithType: Application
  fullName: FlowR.Core.Application
  type: Class
  source:
    remote:
      path: FlowR.Core/Application.cs
      branch: master
      repo: https://github.com/abbadon1334/RealFlowR.git
    id: Application
    path: ../FlowR.Core/Application.cs
    startLine: 11
  assemblies:
  - FlowR.Core
  namespace: FlowR.Core
  summary: "\nApplication container class.\n"
  example: []
  syntax:
    content: public abstract class Application
    content.vb: Public MustInherit Class Application
  inheritance:
  - System.Object
  derivedClasses:
  - FlowR.UI.Application
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: FlowR.Core.Application.RootElement
  commentId: F:FlowR.Core.Application.RootElement
  id: RootElement
  parent: FlowR.Core.Application
  langs:
  - csharp
  - vb
  name: RootElement
  nameWithType: Application.RootElement
  fullName: FlowR.Core.Application.RootElement
  type: Field
  source:
    remote:
      path: FlowR.Core/Application.cs
      branch: master
      repo: https://github.com/abbadon1334/RealFlowR.git
    id: RootElement
    path: ../FlowR.Core/Application.cs
    startLine: 22
  assemblies:
  - FlowR.Core
  namespace: FlowR.Core
  summary: "\nRoot element of the Application.\nThe composition tree that draw client UI starts from here.\n"
  example: []
  syntax:
    content: protected readonly NodeComponentRoot RootElement
    return:
      type: FlowR.Core.NodeComponentRoot
    content.vb: Protected ReadOnly RootElement As NodeComponentRoot
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: FlowR.Core.Application.RootElementId
  commentId: F:FlowR.Core.Application.RootElementId
  id: RootElementId
  parent: FlowR.Core.Application
  langs:
  - csharp
  - vb
  name: RootElementId
  nameWithType: Application.RootElementId
  fullName: FlowR.Core.Application.RootElementId
  type: Field
  source:
    remote:
      path: FlowR.Core/Application.cs
      branch: master
      repo: https://github.com/abbadon1334/RealFlowR.git
    id: RootElementId
    path: ../FlowR.Core/Application.cs
    startLine: 27
  assemblies:
  - FlowR.Core
  namespace: FlowR.Core
  summary: "\nElement ID of the master container for the application\n"
  example: []
  syntax:
    content: protected readonly string RootElementId
    return:
      type: System.String
    content.vb: Protected ReadOnly RootElementId As String
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: FlowR.Core.Application.#ctor(System.String,Microsoft.AspNetCore.SignalR.IClientProxy,Microsoft.Extensions.Logging.ILogger{FlowR.Core.Application})
  commentId: M:FlowR.Core.Application.#ctor(System.String,Microsoft.AspNetCore.SignalR.IClientProxy,Microsoft.Extensions.Logging.ILogger{FlowR.Core.Application})
  id: '#ctor(System.String,Microsoft.AspNetCore.SignalR.IClientProxy,Microsoft.Extensions.Logging.ILogger{FlowR.Core.Application})'
  parent: FlowR.Core.Application
  langs:
  - csharp
  - vb
  name: Application(String, IClientProxy, ILogger<Application>)
  nameWithType: Application.Application(String, IClientProxy, ILogger<Application>)
  fullName: FlowR.Core.Application.Application(System.String, Microsoft.AspNetCore.SignalR.IClientProxy, Microsoft.Extensions.Logging.ILogger<FlowR.Core.Application>)
  type: Constructor
  source:
    remote:
      path: FlowR.Core/Application.cs
      branch: master
      repo: https://github.com/abbadon1334/RealFlowR.git
    id: .ctor
    path: ../FlowR.Core/Application.cs
    startLine: 35
  assemblies:
  - FlowR.Core
  namespace: FlowR.Core
  summary: "\nthis will be called from the FlowRHub Service\n"
  example: []
  syntax:
    content: public Application(string connectionId, IClientProxy client, ILogger<Application> logger)
    parameters:
    - id: connectionId
      type: System.String
      description: connectionId from Hub
    - id: client
      type: Microsoft.AspNetCore.SignalR.IClientProxy
      description: SignalR client from Hub
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger{FlowR.Core.Application}
      description: ILogger
    content.vb: Public Sub New(connectionId As String, client As IClientProxy, logger As ILogger(Of Application))
  overload: FlowR.Core.Application.#ctor*
  nameWithType.vb: Application.Application(String, IClientProxy, ILogger(Of Application))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: FlowR.Core.Application.Application(System.String, Microsoft.AspNetCore.SignalR.IClientProxy, Microsoft.Extensions.Logging.ILogger(Of FlowR.Core.Application))
  name.vb: Application(String, IClientProxy, ILogger(Of Application))
- uid: FlowR.Core.Application.Communication
  commentId: P:FlowR.Core.Application.Communication
  id: Communication
  parent: FlowR.Core.Application
  langs:
  - csharp
  - vb
  name: Communication
  nameWithType: Application.Communication
  fullName: FlowR.Core.Application.Communication
  type: Property
  source:
    remote:
      path: FlowR.Core/Application.cs
      branch: master
      repo: https://github.com/abbadon1334/RealFlowR.git
    id: Communication
    path: ../FlowR.Core/Application.cs
    startLine: 58
  assemblies:
  - FlowR.Core
  namespace: FlowR.Core
  summary: "\nClient Communications\n"
  example: []
  syntax:
    content: public ApplicationCommunication Communication { get; }
    parameters: []
    return:
      type: FlowR.Core.ApplicationCommunication
    content.vb: Public ReadOnly Property Communication As ApplicationCommunication
  overload: FlowR.Core.Application.Communication*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: FlowR.Core.Application.GetLogger
  commentId: M:FlowR.Core.Application.GetLogger
  id: GetLogger
  parent: FlowR.Core.Application
  langs:
  - csharp
  - vb
  name: GetLogger()
  nameWithType: Application.GetLogger()
  fullName: FlowR.Core.Application.GetLogger()
  type: Method
  source:
    remote:
      path: FlowR.Core/Application.cs
      branch: master
      repo: https://github.com/abbadon1334/RealFlowR.git
    id: GetLogger
    path: ../FlowR.Core/Application.cs
    startLine: 69
  assemblies:
  - FlowR.Core
  namespace: FlowR.Core
  summary: "\nGet Application logger\n"
  example: []
  syntax:
    content: public ILogger<Application> GetLogger()
    return:
      type: Microsoft.Extensions.Logging.ILogger{FlowR.Core.Application}
      description: ''
    content.vb: Public Function GetLogger As ILogger(Of Application)
  overload: FlowR.Core.Application.GetLogger*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: FlowR.Core.Application.RegisterComponent(FlowR.Core.INode)
  commentId: M:FlowR.Core.Application.RegisterComponent(FlowR.Core.INode)
  id: RegisterComponent(FlowR.Core.INode)
  parent: FlowR.Core.Application
  langs:
  - csharp
  - vb
  name: RegisterComponent(INode)
  nameWithType: Application.RegisterComponent(INode)
  fullName: FlowR.Core.Application.RegisterComponent(FlowR.Core.INode)
  type: Method
  source:
    remote:
      path: FlowR.Core/Application.cs
      branch: master
      repo: https://github.com/abbadon1334/RealFlowR.git
    id: RegisterComponent
    path: ../FlowR.Core/Application.cs
    startLine: 79
  assemblies:
  - FlowR.Core
  namespace: FlowR.Core
  summary: "\n[internal use] Add Node to registry.\nInternally called after add to parent Node, usually there is no need to be called.\n"
  example: []
  syntax:
    content: public void RegisterComponent(INode node)
    parameters:
    - id: node
      type: FlowR.Core.INode
      description: ''
    content.vb: Public Sub RegisterComponent(node As INode)
  overload: FlowR.Core.Application.RegisterComponent*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: FlowR.Core.Application.UnregisterComponent(FlowR.Core.INode)
  commentId: M:FlowR.Core.Application.UnregisterComponent(FlowR.Core.INode)
  id: UnregisterComponent(FlowR.Core.INode)
  parent: FlowR.Core.Application
  langs:
  - csharp
  - vb
  name: UnregisterComponent(INode)
  nameWithType: Application.UnregisterComponent(INode)
  fullName: FlowR.Core.Application.UnregisterComponent(FlowR.Core.INode)
  type: Method
  source:
    remote:
      path: FlowR.Core/Application.cs
      branch: master
      repo: https://github.com/abbadon1334/RealFlowR.git
    id: UnregisterComponent
    path: ../FlowR.Core/Application.cs
    startLine: 101
  assemblies:
  - FlowR.Core
  namespace: FlowR.Core
  summary: "\n[internal use] Remove Node from registry.\nInternally called after removed from parent Node, usually there is no need to be called.\n"
  example: []
  syntax:
    content: public void UnregisterComponent(INode node)
    parameters:
    - id: node
      type: FlowR.Core.INode
      description: ''
    content.vb: Public Sub UnregisterComponent(node As INode)
  overload: FlowR.Core.Application.UnregisterComponent*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: FlowR.Core.Application.OnClientEventTriggered(FlowR.Core.Message.MessageEvent)
  commentId: M:FlowR.Core.Application.OnClientEventTriggered(FlowR.Core.Message.MessageEvent)
  id: OnClientEventTriggered(FlowR.Core.Message.MessageEvent)
  parent: FlowR.Core.Application
  langs:
  - csharp
  - vb
  name: OnClientEventTriggered(MessageEvent)
  nameWithType: Application.OnClientEventTriggered(MessageEvent)
  fullName: FlowR.Core.Application.OnClientEventTriggered(FlowR.Core.Message.MessageEvent)
  type: Method
  source:
    remote:
      path: FlowR.Core/Application.cs
      branch: master
      repo: https://github.com/abbadon1334/RealFlowR.git
    id: OnClientEventTriggered
    path: ../FlowR.Core/Application.cs
    startLine: 110
  assemblies:
  - FlowR.Core
  namespace: FlowR.Core
  summary: "\n[internal use] Called from FlowR Hub when a client event is triggered.\n"
  example: []
  syntax:
    content: public void OnClientEventTriggered(MessageEvent message)
    parameters:
    - id: message
      type: FlowR.Core.Message.MessageEvent
      description: ''
    content.vb: Public Sub OnClientEventTriggered(message As MessageEvent)
  overload: FlowR.Core.Application.OnClientEventTriggered*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: FlowR.Core.Application.AddTimer(System.Int32,System.EventHandler,System.Boolean)
  commentId: M:FlowR.Core.Application.AddTimer(System.Int32,System.EventHandler,System.Boolean)
  id: AddTimer(System.Int32,System.EventHandler,System.Boolean)
  parent: FlowR.Core.Application
  langs:
  - csharp
  - vb
  name: AddTimer(Int32, EventHandler, Boolean)
  nameWithType: Application.AddTimer(Int32, EventHandler, Boolean)
  fullName: FlowR.Core.Application.AddTimer(System.Int32, System.EventHandler, System.Boolean)
  type: Method
  source:
    remote:
      path: FlowR.Core/Application.cs
      branch: master
      repo: https://github.com/abbadon1334/RealFlowR.git
    id: AddTimer
    path: ../FlowR.Core/Application.cs
    startLine: 127
  assemblies:
  - FlowR.Core
  namespace: FlowR.Core
  summary: "\nAdd a Timer with a callback\n"
  remarks: Timer will be passed as first argument of every callback call, so you can stop it anytime
  example: []
  syntax:
    content: public void AddTimer(int delay, EventHandler callback, bool infinite = true)
    parameters:
    - id: delay
      type: System.Int32
      description: delay in millisec
    - id: callback
      type: System.EventHandler
      description: The Callback
    - id: infinite
      type: System.Boolean
      description: is a timeout or an interval
    content.vb: Public Sub AddTimer(delay As Integer, callback As EventHandler, infinite As Boolean = True)
  overload: FlowR.Core.Application.AddTimer*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: FlowR.Core.Application.CancelTimer(FlowR.Core.ApplicationTimer)
  commentId: M:FlowR.Core.Application.CancelTimer(FlowR.Core.ApplicationTimer)
  id: CancelTimer(FlowR.Core.ApplicationTimer)
  parent: FlowR.Core.Application
  langs:
  - csharp
  - vb
  name: CancelTimer(ApplicationTimer)
  nameWithType: Application.CancelTimer(ApplicationTimer)
  fullName: FlowR.Core.Application.CancelTimer(FlowR.Core.ApplicationTimer)
  type: Method
  source:
    remote:
      path: FlowR.Core/Application.cs
      branch: master
      repo: https://github.com/abbadon1334/RealFlowR.git
    id: CancelTimer
    path: ../FlowR.Core/Application.cs
    startLine: 136
  assemblies:
  - FlowR.Core
  namespace: FlowR.Core
  summary: "\nRemove a Timer.\n"
  example: []
  syntax:
    content: public void CancelTimer(ApplicationTimer timer)
    parameters:
    - id: timer
      type: FlowR.Core.ApplicationTimer
      description: ''
    content.vb: Public Sub CancelTimer(timer As ApplicationTimer)
  overload: FlowR.Core.Application.CancelTimer*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: FlowR.Core.Application.CallGlobalMethod(System.String,System.String[])
  commentId: M:FlowR.Core.Application.CallGlobalMethod(System.String,System.String[])
  id: CallGlobalMethod(System.String,System.String[])
  parent: FlowR.Core.Application
  langs:
  - csharp
  - vb
  name: CallGlobalMethod(String, String[])
  nameWithType: Application.CallGlobalMethod(String, String[])
  fullName: FlowR.Core.Application.CallGlobalMethod(System.String, System.String[])
  type: Method
  source:
    remote:
      path: FlowR.Core/Application.cs
      branch: master
      repo: https://github.com/abbadon1334/RealFlowR.git
    id: CallGlobalMethod
    path: ../FlowR.Core/Application.cs
    startLine: 147
  assemblies:
  - FlowR.Core
  namespace: FlowR.Core
  summary: "\nCall a global JS method, don&apos;t wait for response.\n"
  example:
  - 'from a DomNode : GetApplication().CallGlobalMethod(&apos;alert&apos;,[&apos;this is an alert&apos;]);'
  syntax:
    content: public void CallGlobalMethod(string methodName, params string[] arguments)
    parameters:
    - id: methodName
      type: System.String
      description: ''
    - id: arguments
      type: System.String[]
      description: ''
    content.vb: Public Sub CallGlobalMethod(methodName As String, ParamArray arguments As String())
  overload: FlowR.Core.Application.CallGlobalMethod*
  nameWithType.vb: Application.CallGlobalMethod(String, String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: FlowR.Core.Application.CallGlobalMethod(System.String, System.String())
  name.vb: CallGlobalMethod(String, String())
- uid: FlowR.Core.Application.CallGlobalMethodWaitResponse(System.String,System.String[])
  commentId: M:FlowR.Core.Application.CallGlobalMethodWaitResponse(System.String,System.String[])
  id: CallGlobalMethodWaitResponse(System.String,System.String[])
  parent: FlowR.Core.Application
  langs:
  - csharp
  - vb
  name: CallGlobalMethodWaitResponse(String, String[])
  nameWithType: Application.CallGlobalMethodWaitResponse(String, String[])
  fullName: FlowR.Core.Application.CallGlobalMethodWaitResponse(System.String, System.String[])
  type: Method
  source:
    remote:
      path: FlowR.Core/Application.cs
      branch: master
      repo: https://github.com/abbadon1334/RealFlowR.git
    id: CallGlobalMethodWaitResponse
    path: ../FlowR.Core/Application.cs
    startLine: 159
  assemblies:
  - FlowR.Core
  namespace: FlowR.Core
  summary: "\nCall a global JS method and wait for response\n"
  example: []
  syntax:
    content: public Task<string> CallGlobalMethodWaitResponse(string methodName, params string[] arguments)
    parameters:
    - id: methodName
      type: System.String
      description: 'window method or complete traversed path like document.location.reload '
    - id: arguments
      type: System.String[]
      description: ''
    return:
      type: System.Threading.Tasks.Task{System.String}
    content.vb: Public Function CallGlobalMethodWaitResponse(methodName As String, ParamArray arguments As String()) As Task(Of String)
  overload: FlowR.Core.Application.CallGlobalMethodWaitResponse*
  nameWithType.vb: Application.CallGlobalMethodWaitResponse(String, String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: FlowR.Core.Application.CallGlobalMethodWaitResponse(System.String, System.String())
  name.vb: CallGlobalMethodWaitResponse(String, String())
- uid: FlowR.Core.Application.GetGlobalProperty(System.String)
  commentId: M:FlowR.Core.Application.GetGlobalProperty(System.String)
  id: GetGlobalProperty(System.String)
  parent: FlowR.Core.Application
  langs:
  - csharp
  - vb
  name: GetGlobalProperty(String)
  nameWithType: Application.GetGlobalProperty(String)
  fullName: FlowR.Core.Application.GetGlobalProperty(System.String)
  type: Method
  source:
    remote:
      path: FlowR.Core/Application.cs
      branch: master
      repo: https://github.com/abbadon1334/RealFlowR.git
    id: GetGlobalProperty
    path: ../FlowR.Core/Application.cs
    startLine: 170
  assemblies:
  - FlowR.Core
  namespace: FlowR.Core
  summary: "\nGet a global JS property and wait for response\n"
  example: []
  syntax:
    content: public Task<string> GetGlobalProperty(string path)
    parameters:
    - id: path
      type: System.String
      description: 'window method or complete traversed path like document.location.reload '
    return:
      type: System.Threading.Tasks.Task{System.String}
    content.vb: Public Function GetGlobalProperty(path As String) As Task(Of String)
  overload: FlowR.Core.Application.GetGlobalProperty*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: FlowR.Core.Application.SetGlobalProperty(System.String,System.String)
  commentId: M:FlowR.Core.Application.SetGlobalProperty(System.String,System.String)
  id: SetGlobalProperty(System.String,System.String)
  parent: FlowR.Core.Application
  langs:
  - csharp
  - vb
  name: SetGlobalProperty(String, String)
  nameWithType: Application.SetGlobalProperty(String, String)
  fullName: FlowR.Core.Application.SetGlobalProperty(System.String, System.String)
  type: Method
  source:
    remote:
      path: FlowR.Core/Application.cs
      branch: master
      repo: https://github.com/abbadon1334/RealFlowR.git
    id: SetGlobalProperty
    path: ../FlowR.Core/Application.cs
    startLine: 181
  assemblies:
  - FlowR.Core
  namespace: FlowR.Core
  summary: "\nSet a global JS property and wait for response\n"
  example: []
  syntax:
    content: public void SetGlobalProperty(string path, string value)
    parameters:
    - id: path
      type: System.String
      description: 'window property or complete traversed path like document.body.scrollHeight '
    - id: value
      type: System.String
      description: ''
    content.vb: Public Sub SetGlobalProperty(path As String, value As String)
  overload: FlowR.Core.Application.SetGlobalProperty*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: FlowR.Core.Application.AddJavascriptResource(System.String)
  commentId: M:FlowR.Core.Application.AddJavascriptResource(System.String)
  id: AddJavascriptResource(System.String)
  parent: FlowR.Core.Application
  langs:
  - csharp
  - vb
  name: AddJavascriptResource(String)
  nameWithType: Application.AddJavascriptResource(String)
  fullName: FlowR.Core.Application.AddJavascriptResource(System.String)
  type: Method
  source:
    remote:
      path: FlowR.Core/Application.cs
      branch: master
      repo: https://github.com/abbadon1334/RealFlowR.git
    id: AddJavascriptResource
    path: ../FlowR.Core/Application.cs
    startLine: 194
  assemblies:
  - FlowR.Core
  namespace: FlowR.Core
  summary: "\nInject Javascript file in document\n"
  example: []
  syntax:
    content: public Task<string> AddJavascriptResource(string url)
    parameters:
    - id: url
      type: System.String
      description: ''
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: ''
    content.vb: Public Function AddJavascriptResource(url As String) As Task(Of String)
  overload: FlowR.Core.Application.AddJavascriptResource*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: FlowR.Core.Application.AddStylesheetResource(System.String)
  commentId: M:FlowR.Core.Application.AddStylesheetResource(System.String)
  id: AddStylesheetResource(System.String)
  parent: FlowR.Core.Application
  langs:
  - csharp
  - vb
  name: AddStylesheetResource(String)
  nameWithType: Application.AddStylesheetResource(String)
  fullName: FlowR.Core.Application.AddStylesheetResource(System.String)
  type: Method
  source:
    remote:
      path: FlowR.Core/Application.cs
      branch: master
      repo: https://github.com/abbadon1334/RealFlowR.git
    id: AddStylesheetResource
    path: ../FlowR.Core/Application.cs
    startLine: 205
  assemblies:
  - FlowR.Core
  namespace: FlowR.Core
  summary: "\nInject Stylesheet file in document\n"
  example: []
  syntax:
    content: public Task<string> AddStylesheetResource(string url)
    parameters:
    - id: url
      type: System.String
      description: ''
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: ''
    content.vb: Public Function AddStylesheetResource(url As String) As Task(Of String)
  overload: FlowR.Core.Application.AddStylesheetResource*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: FlowR.Core
  commentId: N:FlowR.Core
  name: FlowR.Core
  nameWithType: FlowR.Core
  fullName: FlowR.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: FlowR.Core.NodeComponentRoot
  commentId: T:FlowR.Core.NodeComponentRoot
  parent: FlowR.Core
  name: NodeComponentRoot
  nameWithType: NodeComponentRoot
  fullName: FlowR.Core.NodeComponentRoot
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: FlowR.Core.Application.#ctor*
  commentId: Overload:FlowR.Core.Application.#ctor
  name: Application
  nameWithType: Application.Application
  fullName: FlowR.Core.Application.Application
- uid: Microsoft.AspNetCore.SignalR.IClientProxy
  commentId: T:Microsoft.AspNetCore.SignalR.IClientProxy
  parent: Microsoft.AspNetCore.SignalR
  isExternal: true
  name: IClientProxy
  nameWithType: IClientProxy
  fullName: Microsoft.AspNetCore.SignalR.IClientProxy
- uid: Microsoft.Extensions.Logging.ILogger{FlowR.Core.Application}
  commentId: T:Microsoft.Extensions.Logging.ILogger{FlowR.Core.Application}
  parent: Microsoft.Extensions.Logging
  definition: Microsoft.Extensions.Logging.ILogger`1
  name: ILogger<Application>
  nameWithType: ILogger<Application>
  fullName: Microsoft.Extensions.Logging.ILogger<FlowR.Core.Application>
  nameWithType.vb: ILogger(Of Application)
  fullName.vb: Microsoft.Extensions.Logging.ILogger(Of FlowR.Core.Application)
  name.vb: ILogger(Of Application)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: FlowR.Core.Application
    name: Application
    nameWithType: Application
    fullName: FlowR.Core.Application
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: FlowR.Core.Application
    name: Application
    nameWithType: Application
    fullName: FlowR.Core.Application
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.SignalR
  commentId: N:Microsoft.AspNetCore.SignalR
  isExternal: true
  name: Microsoft.AspNetCore.SignalR
  nameWithType: Microsoft.AspNetCore.SignalR
  fullName: Microsoft.AspNetCore.SignalR
- uid: Microsoft.Extensions.Logging.ILogger`1
  commentId: T:Microsoft.Extensions.Logging.ILogger`1
  isExternal: true
  name: ILogger<TCategoryName>
  nameWithType: ILogger<TCategoryName>
  fullName: Microsoft.Extensions.Logging.ILogger<TCategoryName>
  nameWithType.vb: ILogger(Of TCategoryName)
  fullName.vb: Microsoft.Extensions.Logging.ILogger(Of TCategoryName)
  name.vb: ILogger(Of TCategoryName)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TCategoryName
    nameWithType: TCategoryName
    fullName: TCategoryName
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TCategoryName
    nameWithType: TCategoryName
    fullName: TCategoryName
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: true
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
- uid: FlowR.Core.Application.Communication*
  commentId: Overload:FlowR.Core.Application.Communication
  name: Communication
  nameWithType: Application.Communication
  fullName: FlowR.Core.Application.Communication
- uid: FlowR.Core.ApplicationCommunication
  commentId: T:FlowR.Core.ApplicationCommunication
  parent: FlowR.Core
  name: ApplicationCommunication
  nameWithType: ApplicationCommunication
  fullName: FlowR.Core.ApplicationCommunication
- uid: FlowR.Core.Application.GetLogger*
  commentId: Overload:FlowR.Core.Application.GetLogger
  name: GetLogger
  nameWithType: Application.GetLogger
  fullName: FlowR.Core.Application.GetLogger
- uid: FlowR.Core.Application.RegisterComponent*
  commentId: Overload:FlowR.Core.Application.RegisterComponent
  name: RegisterComponent
  nameWithType: Application.RegisterComponent
  fullName: FlowR.Core.Application.RegisterComponent
- uid: FlowR.Core.INode
  commentId: T:FlowR.Core.INode
  parent: FlowR.Core
  name: INode
  nameWithType: INode
  fullName: FlowR.Core.INode
- uid: FlowR.Core.Application.UnregisterComponent*
  commentId: Overload:FlowR.Core.Application.UnregisterComponent
  name: UnregisterComponent
  nameWithType: Application.UnregisterComponent
  fullName: FlowR.Core.Application.UnregisterComponent
- uid: FlowR.Core.Application.OnClientEventTriggered*
  commentId: Overload:FlowR.Core.Application.OnClientEventTriggered
  name: OnClientEventTriggered
  nameWithType: Application.OnClientEventTriggered
  fullName: FlowR.Core.Application.OnClientEventTriggered
- uid: FlowR.Core.Message.MessageEvent
  commentId: T:FlowR.Core.Message.MessageEvent
  parent: FlowR.Core.Message
  name: MessageEvent
  nameWithType: MessageEvent
  fullName: FlowR.Core.Message.MessageEvent
- uid: FlowR.Core.Message
  commentId: N:FlowR.Core.Message
  name: FlowR.Core.Message
  nameWithType: FlowR.Core.Message
  fullName: FlowR.Core.Message
- uid: FlowR.Core.Application.AddTimer*
  commentId: Overload:FlowR.Core.Application.AddTimer
  name: AddTimer
  nameWithType: Application.AddTimer
  fullName: FlowR.Core.Application.AddTimer
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.EventHandler
  commentId: T:System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: FlowR.Core.Application.CancelTimer*
  commentId: Overload:FlowR.Core.Application.CancelTimer
  name: CancelTimer
  nameWithType: Application.CancelTimer
  fullName: FlowR.Core.Application.CancelTimer
- uid: FlowR.Core.ApplicationTimer
  commentId: T:FlowR.Core.ApplicationTimer
  parent: FlowR.Core
  name: ApplicationTimer
  nameWithType: ApplicationTimer
  fullName: FlowR.Core.ApplicationTimer
- uid: FlowR.Core.Application.CallGlobalMethod*
  commentId: Overload:FlowR.Core.Application.CallGlobalMethod
  name: CallGlobalMethod
  nameWithType: Application.CallGlobalMethod
  fullName: FlowR.Core.Application.CallGlobalMethod
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: FlowR.Core.Application.CallGlobalMethodWaitResponse*
  commentId: Overload:FlowR.Core.Application.CallGlobalMethodWaitResponse
  name: CallGlobalMethodWaitResponse
  nameWithType: Application.CallGlobalMethodWaitResponse
  fullName: FlowR.Core.Application.CallGlobalMethodWaitResponse
- uid: System.Threading.Tasks.Task{System.String}
  commentId: T:System.Threading.Tasks.Task{System.String}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<String>
  nameWithType: Task<String>
  fullName: System.Threading.Tasks.Task<System.String>
  nameWithType.vb: Task(Of String)
  fullName.vb: System.Threading.Tasks.Task(Of System.String)
  name.vb: Task(Of String)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: FlowR.Core.Application.GetGlobalProperty*
  commentId: Overload:FlowR.Core.Application.GetGlobalProperty
  name: GetGlobalProperty
  nameWithType: Application.GetGlobalProperty
  fullName: FlowR.Core.Application.GetGlobalProperty
- uid: FlowR.Core.Application.SetGlobalProperty*
  commentId: Overload:FlowR.Core.Application.SetGlobalProperty
  name: SetGlobalProperty
  nameWithType: Application.SetGlobalProperty
  fullName: FlowR.Core.Application.SetGlobalProperty
- uid: FlowR.Core.Application.AddJavascriptResource*
  commentId: Overload:FlowR.Core.Application.AddJavascriptResource
  name: AddJavascriptResource
  nameWithType: Application.AddJavascriptResource
  fullName: FlowR.Core.Application.AddJavascriptResource
- uid: FlowR.Core.Application.AddStylesheetResource*
  commentId: Overload:FlowR.Core.Application.AddStylesheetResource
  name: AddStylesheetResource
  nameWithType: Application.AddStylesheetResource
  fullName: FlowR.Core.Application.AddStylesheetResource
