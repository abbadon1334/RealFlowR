### YamlMime:ManagedReference
items:
- uid: FlowR.Core.Message.MessageElementWithResponse.Factory
  commentId: T:FlowR.Core.Message.MessageElementWithResponse.Factory
  id: MessageElementWithResponse.Factory
  parent: FlowR.Core.Message
  children:
  - FlowR.Core.Message.MessageElementWithResponse.Factory.MessageGetProperty(FlowR.Core.INode,System.String)
  - FlowR.Core.Message.MessageElementWithResponse.Factory.MessageMethodCallWaitResponse(FlowR.Core.INode,System.String,System.String[])
  langs:
  - csharp
  - vb
  name: MessageElementWithResponse.Factory
  nameWithType: MessageElementWithResponse.Factory
  fullName: FlowR.Core.Message.MessageElementWithResponse.Factory
  type: Class
  source:
    remote:
      path: FlowR.Core/Message/MessageElementWithResponse.cs
      branch: master
      repo: https://github.com/abbadon1334/RealFlowR.git
    id: Factory
    path: ../FlowR.Core/Message/MessageElementWithResponse.cs
    startLine: 48
  assemblies:
  - FlowR.Core
  namespace: FlowR.Core.Message
  summary: "\nMessage factory\n"
  example: []
  syntax:
    content: public static class Factory
    content.vb: Public Module Factory
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: FlowR.Core.Message.MessageElementWithResponse.Factory.MessageGetProperty(FlowR.Core.INode,System.String)
  commentId: M:FlowR.Core.Message.MessageElementWithResponse.Factory.MessageGetProperty(FlowR.Core.INode,System.String)
  id: MessageGetProperty(FlowR.Core.INode,System.String)
  parent: FlowR.Core.Message.MessageElementWithResponse.Factory
  langs:
  - csharp
  - vb
  name: MessageGetProperty(INode, String)
  nameWithType: MessageElementWithResponse.Factory.MessageGetProperty(INode, String)
  fullName: FlowR.Core.Message.MessageElementWithResponse.Factory.MessageGetProperty(FlowR.Core.INode, System.String)
  type: Method
  source:
    remote:
      path: FlowR.Core/Message/MessageElementWithResponse.cs
      branch: master
      repo: https://github.com/abbadon1334/RealFlowR.git
    id: MessageGetProperty
    path: ../FlowR.Core/Message/MessageElementWithResponse.cs
    startLine: 56
  assemblies:
  - FlowR.Core
  namespace: FlowR.Core.Message
  summary: "\nMessage GetProperty and wait response\n"
  example: []
  syntax:
    content: public static IMessageResponse MessageGetProperty(INode node, string name)
    parameters:
    - id: node
      type: FlowR.Core.INode
      description: ''
    - id: name
      type: System.String
      description: ''
    return:
      type: FlowR.Core.Message.IMessageResponse
      description: ''
    content.vb: Public Shared Function MessageGetProperty(node As INode, name As String) As IMessageResponse
  overload: FlowR.Core.Message.MessageElementWithResponse.Factory.MessageGetProperty*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: FlowR.Core.Message.MessageElementWithResponse.Factory.MessageMethodCallWaitResponse(FlowR.Core.INode,System.String,System.String[])
  commentId: M:FlowR.Core.Message.MessageElementWithResponse.Factory.MessageMethodCallWaitResponse(FlowR.Core.INode,System.String,System.String[])
  id: MessageMethodCallWaitResponse(FlowR.Core.INode,System.String,System.String[])
  parent: FlowR.Core.Message.MessageElementWithResponse.Factory
  langs:
  - csharp
  - vb
  name: MessageMethodCallWaitResponse(INode, String, String[])
  nameWithType: MessageElementWithResponse.Factory.MessageMethodCallWaitResponse(INode, String, String[])
  fullName: FlowR.Core.Message.MessageElementWithResponse.Factory.MessageMethodCallWaitResponse(FlowR.Core.INode, System.String, System.String[])
  type: Method
  source:
    remote:
      path: FlowR.Core/Message/MessageElementWithResponse.cs
      branch: master
      repo: https://github.com/abbadon1334/RealFlowR.git
    id: MessageMethodCallWaitResponse
    path: ../FlowR.Core/Message/MessageElementWithResponse.cs
    startLine: 72
  assemblies:
  - FlowR.Core
  namespace: FlowR.Core.Message
  summary: "\nMessage CallMethod and wait response\n"
  example: []
  syntax:
    content: public static IMessageResponse MessageMethodCallWaitResponse(INode node, string name, string[] arguments)
    parameters:
    - id: node
      type: FlowR.Core.INode
      description: ''
    - id: name
      type: System.String
      description: ''
    - id: arguments
      type: System.String[]
      description: ''
    return:
      type: FlowR.Core.Message.IMessageResponse
      description: ''
    content.vb: Public Shared Function MessageMethodCallWaitResponse(node As INode, name As String, arguments As String()) As IMessageResponse
  overload: FlowR.Core.Message.MessageElementWithResponse.Factory.MessageMethodCallWaitResponse*
  nameWithType.vb: MessageElementWithResponse.Factory.MessageMethodCallWaitResponse(INode, String, String())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: FlowR.Core.Message.MessageElementWithResponse.Factory.MessageMethodCallWaitResponse(FlowR.Core.INode, System.String, System.String())
  name.vb: MessageMethodCallWaitResponse(INode, String, String())
references:
- uid: FlowR.Core.Message
  commentId: N:FlowR.Core.Message
  name: FlowR.Core.Message
  nameWithType: FlowR.Core.Message
  fullName: FlowR.Core.Message
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: FlowR.Core.Message.MessageElementWithResponse.Factory.MessageGetProperty*
  commentId: Overload:FlowR.Core.Message.MessageElementWithResponse.Factory.MessageGetProperty
  name: MessageGetProperty
  nameWithType: MessageElementWithResponse.Factory.MessageGetProperty
  fullName: FlowR.Core.Message.MessageElementWithResponse.Factory.MessageGetProperty
- uid: FlowR.Core.INode
  commentId: T:FlowR.Core.INode
  parent: FlowR.Core
  name: INode
  nameWithType: INode
  fullName: FlowR.Core.INode
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: FlowR.Core.Message.IMessageResponse
  commentId: T:FlowR.Core.Message.IMessageResponse
  parent: FlowR.Core.Message
  name: IMessageResponse
  nameWithType: IMessageResponse
  fullName: FlowR.Core.Message.IMessageResponse
- uid: FlowR.Core
  commentId: N:FlowR.Core
  name: FlowR.Core
  nameWithType: FlowR.Core
  fullName: FlowR.Core
- uid: FlowR.Core.Message.MessageElementWithResponse.Factory.MessageMethodCallWaitResponse*
  commentId: Overload:FlowR.Core.Message.MessageElementWithResponse.Factory.MessageMethodCallWaitResponse
  name: MessageMethodCallWaitResponse
  nameWithType: MessageElementWithResponse.Factory.MessageMethodCallWaitResponse
  fullName: FlowR.Core.Message.MessageElementWithResponse.Factory.MessageMethodCallWaitResponse
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
