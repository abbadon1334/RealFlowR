### YamlMime:ManagedReference
items:
- uid: FlowR.Core.Message.Message
  commentId: T:FlowR.Core.Message.Message
  id: Message
  parent: FlowR.Core.Message
  children:
  - FlowR.Core.Message.Message.#ctor
  - FlowR.Core.Message.Message.AddArgument(System.Object[])
  - FlowR.Core.Message.Message.GetArgumentValues
  - FlowR.Core.Message.Message.GetRequestedAction
  - FlowR.Core.Message.Message.GetUuid
  - FlowR.Core.Message.Message.SendMessageAsync(FlowR.Core.ApplicationCommunication)
  - FlowR.Core.Message.Message.Uuid
  langs:
  - csharp
  - vb
  name: Message
  nameWithType: Message
  fullName: FlowR.Core.Message.Message
  type: Class
  source:
    remote:
      path: FlowR.Core/Message/Message.cs
      branch: master
      repo: https://github.com/abbadon1334/RealFlowR.git
    id: Message
    path: ../FlowR.Core/Message/Message.cs
    startLine: 10
  assemblies:
  - FlowR.Core
  namespace: FlowR.Core.Message
  summary: "\nMessage Class\n"
  example: []
  syntax:
    content: 'public abstract class Message : IMessage'
    content.vb: >-
      Public MustInherit Class Message
          Implements IMessage
  inheritance:
  - System.Object
  derivedClasses:
  - FlowR.Core.Message.MessageElement
  - FlowR.Core.Message.MessageEvent
  - FlowR.Core.Message.MessageGlobal
  - FlowR.Core.Message.MessageResponse
  implements:
  - FlowR.Core.Message.IMessage
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: FlowR.Core.Message.Message.Uuid
  commentId: F:FlowR.Core.Message.Message.Uuid
  id: Uuid
  parent: FlowR.Core.Message.Message
  langs:
  - csharp
  - vb
  name: Uuid
  nameWithType: Message.Uuid
  fullName: FlowR.Core.Message.Message.Uuid
  type: Field
  source:
    remote:
      path: FlowR.Core/Message/Message.cs
      branch: master
      repo: https://github.com/abbadon1334/RealFlowR.git
    id: Uuid
    path: ../FlowR.Core/Message/Message.cs
    startLine: 17
  assemblies:
  - FlowR.Core
  namespace: FlowR.Core.Message
  summary: "\nMessage Uuid\n"
  example: []
  syntax:
    content: >-
      [JsonInclude]

      public string Uuid
    return:
      type: System.String
    content.vb: >-
      <JsonInclude>

      Public Uuid As String
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: FlowR.Core.Message.Message.#ctor
  commentId: M:FlowR.Core.Message.Message.#ctor
  id: '#ctor'
  parent: FlowR.Core.Message.Message
  langs:
  - csharp
  - vb
  name: Message()
  nameWithType: Message.Message()
  fullName: FlowR.Core.Message.Message.Message()
  type: Constructor
  source:
    remote:
      path: FlowR.Core/Message/Message.cs
      branch: master
      repo: https://github.com/abbadon1334/RealFlowR.git
    id: .ctor
    path: ../FlowR.Core/Message/Message.cs
    startLine: 22
  assemblies:
  - FlowR.Core
  namespace: FlowR.Core.Message
  summary: "\nConstructor\n"
  example: []
  syntax:
    content: protected Message()
    content.vb: Protected Sub New
  overload: FlowR.Core.Message.Message.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: FlowR.Core.Message.Message.GetUuid
  commentId: M:FlowR.Core.Message.Message.GetUuid
  id: GetUuid
  parent: FlowR.Core.Message.Message
  langs:
  - csharp
  - vb
  name: GetUuid()
  nameWithType: Message.GetUuid()
  fullName: FlowR.Core.Message.Message.GetUuid()
  type: Method
  source:
    remote:
      path: FlowR.Core/Message/Message.cs
      branch: master
      repo: https://github.com/abbadon1334/RealFlowR.git
    id: GetUuid
    path: ../FlowR.Core/Message/Message.cs
    startLine: 32
  assemblies:
  - FlowR.Core
  namespace: FlowR.Core.Message
  summary: "\nGet the Uuid of the message.\n"
  example: []
  syntax:
    content: public string GetUuid()
    return:
      type: System.String
      description: ''
    content.vb: Public Function GetUuid As String
  overload: FlowR.Core.Message.Message.GetUuid*
  implements:
  - FlowR.Core.Message.IMessage.GetUuid
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: FlowR.Core.Message.Message.GetRequestedAction
  commentId: M:FlowR.Core.Message.Message.GetRequestedAction
  id: GetRequestedAction
  parent: FlowR.Core.Message.Message
  langs:
  - csharp
  - vb
  name: GetRequestedAction()
  nameWithType: Message.GetRequestedAction()
  fullName: FlowR.Core.Message.Message.GetRequestedAction()
  type: Method
  source:
    remote:
      path: FlowR.Core/Message/Message.cs
      branch: master
      repo: https://github.com/abbadon1334/RealFlowR.git
    id: GetRequestedAction
    path: ../FlowR.Core/Message/Message.cs
    startLine: 41
  assemblies:
  - FlowR.Core
  namespace: FlowR.Core.Message
  summary: "\nGet Action as string\n"
  example: []
  syntax:
    content: public abstract string GetRequestedAction()
    return:
      type: System.String
      description: ''
    content.vb: Public MustOverride Function GetRequestedAction As String
  overload: FlowR.Core.Message.Message.GetRequestedAction*
  implements:
  - FlowR.Core.Message.IMessage.GetRequestedAction
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: FlowR.Core.Message.Message.GetArgumentValues
  commentId: M:FlowR.Core.Message.Message.GetArgumentValues
  id: GetArgumentValues
  parent: FlowR.Core.Message.Message
  langs:
  - csharp
  - vb
  name: GetArgumentValues()
  nameWithType: Message.GetArgumentValues()
  fullName: FlowR.Core.Message.Message.GetArgumentValues()
  type: Method
  source:
    remote:
      path: FlowR.Core/Message/Message.cs
      branch: master
      repo: https://github.com/abbadon1334/RealFlowR.git
    id: GetArgumentValues
    path: ../FlowR.Core/Message/Message.cs
    startLine: 45
  assemblies:
  - FlowR.Core
  namespace: FlowR.Core.Message
  summary: "\nGet Arguments as array\n"
  example: []
  syntax:
    content: public object[] GetArgumentValues()
    return:
      type: System.Object[]
      description: ''
    content.vb: Public Function GetArgumentValues As Object()
  overload: FlowR.Core.Message.Message.GetArgumentValues*
  implements:
  - FlowR.Core.Message.IMessage.GetArgumentValues
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: FlowR.Core.Message.Message.SendMessageAsync(FlowR.Core.ApplicationCommunication)
  commentId: M:FlowR.Core.Message.Message.SendMessageAsync(FlowR.Core.ApplicationCommunication)
  id: SendMessageAsync(FlowR.Core.ApplicationCommunication)
  parent: FlowR.Core.Message.Message
  langs:
  - csharp
  - vb
  name: SendMessageAsync(ApplicationCommunication)
  nameWithType: Message.SendMessageAsync(ApplicationCommunication)
  fullName: FlowR.Core.Message.Message.SendMessageAsync(FlowR.Core.ApplicationCommunication)
  type: Method
  source:
    remote:
      path: FlowR.Core/Message/Message.cs
      branch: master
      repo: https://github.com/abbadon1334/RealFlowR.git
    id: SendMessageAsync
    path: ../FlowR.Core/Message/Message.cs
    startLine: 51
  assemblies:
  - FlowR.Core
  namespace: FlowR.Core.Message
  summary: "\nSend a message to SignalR Client, don&apos;t wait for response\n"
  example: []
  syntax:
    content: public virtual Task SendMessageAsync(ApplicationCommunication comm)
    parameters:
    - id: comm
      type: FlowR.Core.ApplicationCommunication
      description: ''
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Overridable Function SendMessageAsync(comm As ApplicationCommunication) As Task
  overload: FlowR.Core.Message.Message.SendMessageAsync*
  implements:
  - FlowR.Core.Message.IMessage.SendMessageAsync(FlowR.Core.ApplicationCommunication)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: FlowR.Core.Message.Message.AddArgument(System.Object[])
  commentId: M:FlowR.Core.Message.Message.AddArgument(System.Object[])
  id: AddArgument(System.Object[])
  parent: FlowR.Core.Message.Message
  langs:
  - csharp
  - vb
  name: AddArgument(Object[])
  nameWithType: Message.AddArgument(Object[])
  fullName: FlowR.Core.Message.Message.AddArgument(System.Object[])
  type: Method
  source:
    remote:
      path: FlowR.Core/Message/Message.cs
      branch: master
      repo: https://github.com/abbadon1334/RealFlowR.git
    id: AddArgument
    path: ../FlowR.Core/Message/Message.cs
    startLine: 60
  assemblies:
  - FlowR.Core
  namespace: FlowR.Core.Message
  summary: "\nAdd Argument to Argument list for the message.\n"
  example: []
  syntax:
    content: protected void AddArgument(params object[] values)
    parameters:
    - id: values
      type: System.Object[]
      description: ''
    content.vb: Protected Sub AddArgument(ParamArray values As Object())
  overload: FlowR.Core.Message.Message.AddArgument*
  nameWithType.vb: Message.AddArgument(Object())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: FlowR.Core.Message.Message.AddArgument(System.Object())
  name.vb: AddArgument(Object())
references:
- uid: FlowR.Core.Message
  commentId: N:FlowR.Core.Message
  name: FlowR.Core.Message
  nameWithType: FlowR.Core.Message
  fullName: FlowR.Core.Message
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: FlowR.Core.Message.IMessage
  commentId: T:FlowR.Core.Message.IMessage
  parent: FlowR.Core.Message
  name: IMessage
  nameWithType: IMessage
  fullName: FlowR.Core.Message.IMessage
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: FlowR.Core.Message.Message.#ctor*
  commentId: Overload:FlowR.Core.Message.Message.#ctor
  name: Message
  nameWithType: Message.Message
  fullName: FlowR.Core.Message.Message.Message
- uid: FlowR.Core.Message.Message.GetUuid*
  commentId: Overload:FlowR.Core.Message.Message.GetUuid
  name: GetUuid
  nameWithType: Message.GetUuid
  fullName: FlowR.Core.Message.Message.GetUuid
- uid: FlowR.Core.Message.IMessage.GetUuid
  commentId: M:FlowR.Core.Message.IMessage.GetUuid
  parent: FlowR.Core.Message.IMessage
  name: GetUuid()
  nameWithType: IMessage.GetUuid()
  fullName: FlowR.Core.Message.IMessage.GetUuid()
  spec.csharp:
  - uid: FlowR.Core.Message.IMessage.GetUuid
    name: GetUuid
    nameWithType: IMessage.GetUuid
    fullName: FlowR.Core.Message.IMessage.GetUuid
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FlowR.Core.Message.IMessage.GetUuid
    name: GetUuid
    nameWithType: IMessage.GetUuid
    fullName: FlowR.Core.Message.IMessage.GetUuid
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: FlowR.Core.Message.Message.GetRequestedAction*
  commentId: Overload:FlowR.Core.Message.Message.GetRequestedAction
  name: GetRequestedAction
  nameWithType: Message.GetRequestedAction
  fullName: FlowR.Core.Message.Message.GetRequestedAction
- uid: FlowR.Core.Message.IMessage.GetRequestedAction
  commentId: M:FlowR.Core.Message.IMessage.GetRequestedAction
  parent: FlowR.Core.Message.IMessage
  name: GetRequestedAction()
  nameWithType: IMessage.GetRequestedAction()
  fullName: FlowR.Core.Message.IMessage.GetRequestedAction()
  spec.csharp:
  - uid: FlowR.Core.Message.IMessage.GetRequestedAction
    name: GetRequestedAction
    nameWithType: IMessage.GetRequestedAction
    fullName: FlowR.Core.Message.IMessage.GetRequestedAction
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FlowR.Core.Message.IMessage.GetRequestedAction
    name: GetRequestedAction
    nameWithType: IMessage.GetRequestedAction
    fullName: FlowR.Core.Message.IMessage.GetRequestedAction
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: FlowR.Core.Message.Message.GetArgumentValues*
  commentId: Overload:FlowR.Core.Message.Message.GetArgumentValues
  name: GetArgumentValues
  nameWithType: Message.GetArgumentValues
  fullName: FlowR.Core.Message.Message.GetArgumentValues
- uid: FlowR.Core.Message.IMessage.GetArgumentValues
  commentId: M:FlowR.Core.Message.IMessage.GetArgumentValues
  parent: FlowR.Core.Message.IMessage
  name: GetArgumentValues()
  nameWithType: IMessage.GetArgumentValues()
  fullName: FlowR.Core.Message.IMessage.GetArgumentValues()
  spec.csharp:
  - uid: FlowR.Core.Message.IMessage.GetArgumentValues
    name: GetArgumentValues
    nameWithType: IMessage.GetArgumentValues
    fullName: FlowR.Core.Message.IMessage.GetArgumentValues
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FlowR.Core.Message.IMessage.GetArgumentValues
    name: GetArgumentValues
    nameWithType: IMessage.GetArgumentValues
    fullName: FlowR.Core.Message.IMessage.GetArgumentValues
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object[]
  isExternal: true
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  nameWithType.vb: Object()
  fullName.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: FlowR.Core.Message.Message.SendMessageAsync*
  commentId: Overload:FlowR.Core.Message.Message.SendMessageAsync
  name: SendMessageAsync
  nameWithType: Message.SendMessageAsync
  fullName: FlowR.Core.Message.Message.SendMessageAsync
- uid: FlowR.Core.Message.IMessage.SendMessageAsync(FlowR.Core.ApplicationCommunication)
  commentId: M:FlowR.Core.Message.IMessage.SendMessageAsync(FlowR.Core.ApplicationCommunication)
  parent: FlowR.Core.Message.IMessage
  name: SendMessageAsync(ApplicationCommunication)
  nameWithType: IMessage.SendMessageAsync(ApplicationCommunication)
  fullName: FlowR.Core.Message.IMessage.SendMessageAsync(FlowR.Core.ApplicationCommunication)
  spec.csharp:
  - uid: FlowR.Core.Message.IMessage.SendMessageAsync(FlowR.Core.ApplicationCommunication)
    name: SendMessageAsync
    nameWithType: IMessage.SendMessageAsync
    fullName: FlowR.Core.Message.IMessage.SendMessageAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: FlowR.Core.ApplicationCommunication
    name: ApplicationCommunication
    nameWithType: ApplicationCommunication
    fullName: FlowR.Core.ApplicationCommunication
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FlowR.Core.Message.IMessage.SendMessageAsync(FlowR.Core.ApplicationCommunication)
    name: SendMessageAsync
    nameWithType: IMessage.SendMessageAsync
    fullName: FlowR.Core.Message.IMessage.SendMessageAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: FlowR.Core.ApplicationCommunication
    name: ApplicationCommunication
    nameWithType: ApplicationCommunication
    fullName: FlowR.Core.ApplicationCommunication
  - name: )
    nameWithType: )
    fullName: )
- uid: FlowR.Core.ApplicationCommunication
  commentId: T:FlowR.Core.ApplicationCommunication
  parent: FlowR.Core
  name: ApplicationCommunication
  nameWithType: ApplicationCommunication
  fullName: FlowR.Core.ApplicationCommunication
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: FlowR.Core
  commentId: N:FlowR.Core
  name: FlowR.Core
  nameWithType: FlowR.Core
  fullName: FlowR.Core
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: FlowR.Core.Message.Message.AddArgument*
  commentId: Overload:FlowR.Core.Message.Message.AddArgument
  name: AddArgument
  nameWithType: Message.AddArgument
  fullName: FlowR.Core.Message.Message.AddArgument
