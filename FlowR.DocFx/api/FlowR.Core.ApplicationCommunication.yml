### YamlMime:ManagedReference
items:
- uid: FlowR.Core.ApplicationCommunication
  commentId: T:FlowR.Core.ApplicationCommunication
  id: ApplicationCommunication
  parent: FlowR.Core
  children:
  - FlowR.Core.ApplicationCommunication.#ctor(FlowR.Core.Application,Microsoft.AspNetCore.SignalR.IClientProxy)
  - FlowR.Core.ApplicationCommunication.OnWaitingMessageResponse(FlowR.Core.Message.IMessageResponse)
  - FlowR.Core.ApplicationCommunication.SendMessage(FlowR.Core.Message.IMessage)
  - FlowR.Core.ApplicationCommunication.SendMessageWaitResponse(FlowR.Core.Message.IMessageResponse)
  langs:
  - csharp
  - vb
  name: ApplicationCommunication
  nameWithType: ApplicationCommunication
  fullName: FlowR.Core.ApplicationCommunication
  type: Class
  source:
    remote:
      path: FlowR.Core/ApplicationCommunication.cs
      branch: master
      repo: https://github.com/abbadon1334/RealFlowR.git
    id: ApplicationCommunication
    path: ../FlowR.Core/ApplicationCommunication.cs
    startLine: 10
  assemblies:
  - FlowR.Core
  namespace: FlowR.Core
  summary: "\nManage Communication\n"
  example: []
  syntax:
    content: public class ApplicationCommunication
    content.vb: Public Class ApplicationCommunication
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: FlowR.Core.ApplicationCommunication.#ctor(FlowR.Core.Application,Microsoft.AspNetCore.SignalR.IClientProxy)
  commentId: M:FlowR.Core.ApplicationCommunication.#ctor(FlowR.Core.Application,Microsoft.AspNetCore.SignalR.IClientProxy)
  id: '#ctor(FlowR.Core.Application,Microsoft.AspNetCore.SignalR.IClientProxy)'
  parent: FlowR.Core.ApplicationCommunication
  langs:
  - csharp
  - vb
  name: ApplicationCommunication(Application, IClientProxy)
  nameWithType: ApplicationCommunication.ApplicationCommunication(Application, IClientProxy)
  fullName: FlowR.Core.ApplicationCommunication.ApplicationCommunication(FlowR.Core.Application, Microsoft.AspNetCore.SignalR.IClientProxy)
  type: Constructor
  source:
    remote:
      path: FlowR.Core/ApplicationCommunication.cs
      branch: master
      repo: https://github.com/abbadon1334/RealFlowR.git
    id: .ctor
    path: ../FlowR.Core/ApplicationCommunication.cs
    startLine: 20
  assemblies:
  - FlowR.Core
  namespace: FlowR.Core
  summary: "\nConstructor\n"
  example: []
  syntax:
    content: public ApplicationCommunication(Application application, IClientProxy client)
    parameters:
    - id: application
      type: FlowR.Core.Application
      description: ''
    - id: client
      type: Microsoft.AspNetCore.SignalR.IClientProxy
      description: ''
    content.vb: Public Sub New(application As Application, client As IClientProxy)
  overload: FlowR.Core.ApplicationCommunication.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: FlowR.Core.ApplicationCommunication.SendMessage(FlowR.Core.Message.IMessage)
  commentId: M:FlowR.Core.ApplicationCommunication.SendMessage(FlowR.Core.Message.IMessage)
  id: SendMessage(FlowR.Core.Message.IMessage)
  parent: FlowR.Core.ApplicationCommunication
  langs:
  - csharp
  - vb
  name: SendMessage(IMessage)
  nameWithType: ApplicationCommunication.SendMessage(IMessage)
  fullName: FlowR.Core.ApplicationCommunication.SendMessage(FlowR.Core.Message.IMessage)
  type: Method
  source:
    remote:
      path: FlowR.Core/ApplicationCommunication.cs
      branch: master
      repo: https://github.com/abbadon1334/RealFlowR.git
    id: SendMessage
    path: ../FlowR.Core/ApplicationCommunication.cs
    startLine: 35
  assemblies:
  - FlowR.Core
  namespace: FlowR.Core
  summary: "\nSend a message to SignalR Client, don&apos;t wait for response\n"
  example: []
  syntax:
    content: public Task SendMessage(IMessage message)
    parameters:
    - id: message
      type: FlowR.Core.Message.IMessage
      description: ''
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function SendMessage(message As IMessage) As Task
  overload: FlowR.Core.ApplicationCommunication.SendMessage*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: FlowR.Core.ApplicationCommunication.SendMessageWaitResponse(FlowR.Core.Message.IMessageResponse)
  commentId: M:FlowR.Core.ApplicationCommunication.SendMessageWaitResponse(FlowR.Core.Message.IMessageResponse)
  id: SendMessageWaitResponse(FlowR.Core.Message.IMessageResponse)
  parent: FlowR.Core.ApplicationCommunication
  langs:
  - csharp
  - vb
  name: SendMessageWaitResponse(IMessageResponse)
  nameWithType: ApplicationCommunication.SendMessageWaitResponse(IMessageResponse)
  fullName: FlowR.Core.ApplicationCommunication.SendMessageWaitResponse(FlowR.Core.Message.IMessageResponse)
  type: Method
  source:
    remote:
      path: FlowR.Core/ApplicationCommunication.cs
      branch: master
      repo: https://github.com/abbadon1334/RealFlowR.git
    id: SendMessageWaitResponse
    path: ../FlowR.Core/ApplicationCommunication.cs
    startLine: 58
  assemblies:
  - FlowR.Core
  namespace: FlowR.Core
  summary: "\nSend a message to SignalR Client and wait for response\n"
  example: []
  syntax:
    content: public Task<string> SendMessageWaitResponse(IMessageResponse message)
    parameters:
    - id: message
      type: FlowR.Core.Message.IMessageResponse
      description: ''
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: ''
    content.vb: Public Function SendMessageWaitResponse(message As IMessageResponse) As Task(Of String)
  overload: FlowR.Core.ApplicationCommunication.SendMessageWaitResponse*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: FlowR.Core.ApplicationCommunication.OnWaitingMessageResponse(FlowR.Core.Message.IMessageResponse)
  commentId: M:FlowR.Core.ApplicationCommunication.OnWaitingMessageResponse(FlowR.Core.Message.IMessageResponse)
  id: OnWaitingMessageResponse(FlowR.Core.Message.IMessageResponse)
  parent: FlowR.Core.ApplicationCommunication
  langs:
  - csharp
  - vb
  name: OnWaitingMessageResponse(IMessageResponse)
  nameWithType: ApplicationCommunication.OnWaitingMessageResponse(IMessageResponse)
  fullName: FlowR.Core.ApplicationCommunication.OnWaitingMessageResponse(FlowR.Core.Message.IMessageResponse)
  type: Method
  source:
    remote:
      path: FlowR.Core/ApplicationCommunication.cs
      branch: master
      repo: https://github.com/abbadon1334/RealFlowR.git
    id: OnWaitingMessageResponse
    path: ../FlowR.Core/ApplicationCommunication.cs
    startLine: 68
  assemblies:
  - FlowR.Core
  namespace: FlowR.Core
  summary: "\n[internal use] Called from SignalR Client when a new response arrive.\n"
  example: []
  syntax:
    content: public void OnWaitingMessageResponse(IMessageResponse message)
    parameters:
    - id: message
      type: FlowR.Core.Message.IMessageResponse
      description: ''
    content.vb: Public Sub OnWaitingMessageResponse(message As IMessageResponse)
  overload: FlowR.Core.ApplicationCommunication.OnWaitingMessageResponse*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: FlowR.Core
  commentId: N:FlowR.Core
  name: FlowR.Core
  nameWithType: FlowR.Core
  fullName: FlowR.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: FlowR.Core.ApplicationCommunication.#ctor*
  commentId: Overload:FlowR.Core.ApplicationCommunication.#ctor
  name: ApplicationCommunication
  nameWithType: ApplicationCommunication.ApplicationCommunication
  fullName: FlowR.Core.ApplicationCommunication.ApplicationCommunication
- uid: FlowR.Core.Application
  commentId: T:FlowR.Core.Application
  parent: FlowR.Core
  name: Application
  nameWithType: Application
  fullName: FlowR.Core.Application
- uid: Microsoft.AspNetCore.SignalR.IClientProxy
  commentId: T:Microsoft.AspNetCore.SignalR.IClientProxy
  parent: Microsoft.AspNetCore.SignalR
  isExternal: true
  name: IClientProxy
  nameWithType: IClientProxy
  fullName: Microsoft.AspNetCore.SignalR.IClientProxy
- uid: Microsoft.AspNetCore.SignalR
  commentId: N:Microsoft.AspNetCore.SignalR
  isExternal: true
  name: Microsoft.AspNetCore.SignalR
  nameWithType: Microsoft.AspNetCore.SignalR
  fullName: Microsoft.AspNetCore.SignalR
- uid: FlowR.Core.ApplicationCommunication.SendMessage*
  commentId: Overload:FlowR.Core.ApplicationCommunication.SendMessage
  name: SendMessage
  nameWithType: ApplicationCommunication.SendMessage
  fullName: FlowR.Core.ApplicationCommunication.SendMessage
- uid: FlowR.Core.Message.IMessage
  commentId: T:FlowR.Core.Message.IMessage
  parent: FlowR.Core.Message
  name: IMessage
  nameWithType: IMessage
  fullName: FlowR.Core.Message.IMessage
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: FlowR.Core.Message
  commentId: N:FlowR.Core.Message
  name: FlowR.Core.Message
  nameWithType: FlowR.Core.Message
  fullName: FlowR.Core.Message
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: FlowR.Core.ApplicationCommunication.SendMessageWaitResponse*
  commentId: Overload:FlowR.Core.ApplicationCommunication.SendMessageWaitResponse
  name: SendMessageWaitResponse
  nameWithType: ApplicationCommunication.SendMessageWaitResponse
  fullName: FlowR.Core.ApplicationCommunication.SendMessageWaitResponse
- uid: FlowR.Core.Message.IMessageResponse
  commentId: T:FlowR.Core.Message.IMessageResponse
  parent: FlowR.Core.Message
  name: IMessageResponse
  nameWithType: IMessageResponse
  fullName: FlowR.Core.Message.IMessageResponse
- uid: System.Threading.Tasks.Task{System.String}
  commentId: T:System.Threading.Tasks.Task{System.String}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<String>
  nameWithType: Task<String>
  fullName: System.Threading.Tasks.Task<System.String>
  nameWithType.vb: Task(Of String)
  fullName.vb: System.Threading.Tasks.Task(Of System.String)
  name.vb: Task(Of String)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: FlowR.Core.ApplicationCommunication.OnWaitingMessageResponse*
  commentId: Overload:FlowR.Core.ApplicationCommunication.OnWaitingMessageResponse
  name: OnWaitingMessageResponse
  nameWithType: ApplicationCommunication.OnWaitingMessageResponse
  fullName: FlowR.Core.ApplicationCommunication.OnWaitingMessageResponse
