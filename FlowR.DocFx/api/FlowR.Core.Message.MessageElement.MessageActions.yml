### YamlMime:ManagedReference
items:
- uid: FlowR.Core.Message.MessageElement.MessageActions
  commentId: T:FlowR.Core.Message.MessageElement.MessageActions
  id: MessageElement.MessageActions
  parent: FlowR.Core.Message
  children:
  - FlowR.Core.Message.MessageElement.MessageActions.AddMethod
  - FlowR.Core.Message.MessageElement.MessageActions.CallMethod
  - FlowR.Core.Message.MessageElement.MessageActions.CreateElement
  - FlowR.Core.Message.MessageElement.MessageActions.RemoveAttribute
  - FlowR.Core.Message.MessageElement.MessageActions.RemoveElement
  - FlowR.Core.Message.MessageElement.MessageActions.SetAttribute
  - FlowR.Core.Message.MessageElement.MessageActions.SetProperty
  - FlowR.Core.Message.MessageElement.MessageActions.SetText
  - FlowR.Core.Message.MessageElement.MessageActions.StartListenEvent
  - FlowR.Core.Message.MessageElement.MessageActions.StopListenEvent
  langs:
  - csharp
  - vb
  name: MessageElement.MessageActions
  nameWithType: MessageElement.MessageActions
  fullName: FlowR.Core.Message.MessageElement.MessageActions
  type: Enum
  source:
    remote:
      path: FlowR.Core/Message/MessageElement.cs
      branch: master
      repo: https://github.com/abbadon1334/RealFlowR.git
    id: MessageActions
    path: ../FlowR.Core/Message/MessageElement.cs
    startLine: 10
  assemblies:
  - FlowR.Core
  namespace: FlowR.Core.Message
  summary: "\nName of the method to be called on client side signalr\n"
  example: []
  syntax:
    content: public enum MessageActions
    content.vb: Public Enum MessageActions
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: FlowR.Core.Message.MessageElement.MessageActions.CreateElement
  commentId: F:FlowR.Core.Message.MessageElement.MessageActions.CreateElement
  id: CreateElement
  parent: FlowR.Core.Message.MessageElement.MessageActions
  langs:
  - csharp
  - vb
  name: CreateElement
  nameWithType: MessageElement.MessageActions.CreateElement
  fullName: FlowR.Core.Message.MessageElement.MessageActions.CreateElement
  type: Field
  source:
    remote:
      path: FlowR.Core/Message/MessageElement.cs
      branch: master
      repo: https://github.com/abbadon1334/RealFlowR.git
    id: CreateElement
    path: ../FlowR.Core/Message/MessageElement.cs
    startLine: 15
  assemblies:
  - FlowR.Core
  namespace: FlowR.Core.Message
  summary: "\nCreate a new Element\n"
  example: []
  syntax:
    content: CreateElement = 0
    return:
      type: FlowR.Core.Message.MessageElement.MessageActions
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: FlowR.Core.Message.MessageElement.MessageActions.RemoveElement
  commentId: F:FlowR.Core.Message.MessageElement.MessageActions.RemoveElement
  id: RemoveElement
  parent: FlowR.Core.Message.MessageElement.MessageActions
  langs:
  - csharp
  - vb
  name: RemoveElement
  nameWithType: MessageElement.MessageActions.RemoveElement
  fullName: FlowR.Core.Message.MessageElement.MessageActions.RemoveElement
  type: Field
  source:
    remote:
      path: FlowR.Core/Message/MessageElement.cs
      branch: master
      repo: https://github.com/abbadon1334/RealFlowR.git
    id: RemoveElement
    path: ../FlowR.Core/Message/MessageElement.cs
    startLine: 20
  assemblies:
  - FlowR.Core
  namespace: FlowR.Core.Message
  summary: "\nRemove an Element\n"
  example: []
  syntax:
    content: RemoveElement = 1
    return:
      type: FlowR.Core.Message.MessageElement.MessageActions
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: FlowR.Core.Message.MessageElement.MessageActions.SetAttribute
  commentId: F:FlowR.Core.Message.MessageElement.MessageActions.SetAttribute
  id: SetAttribute
  parent: FlowR.Core.Message.MessageElement.MessageActions
  langs:
  - csharp
  - vb
  name: SetAttribute
  nameWithType: MessageElement.MessageActions.SetAttribute
  fullName: FlowR.Core.Message.MessageElement.MessageActions.SetAttribute
  type: Field
  source:
    remote:
      path: FlowR.Core/Message/MessageElement.cs
      branch: master
      repo: https://github.com/abbadon1334/RealFlowR.git
    id: SetAttribute
    path: ../FlowR.Core/Message/MessageElement.cs
    startLine: 25
  assemblies:
  - FlowR.Core
  namespace: FlowR.Core.Message
  summary: "\nElement Set Attribute\n"
  example: []
  syntax:
    content: SetAttribute = 2
    return:
      type: FlowR.Core.Message.MessageElement.MessageActions
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: FlowR.Core.Message.MessageElement.MessageActions.RemoveAttribute
  commentId: F:FlowR.Core.Message.MessageElement.MessageActions.RemoveAttribute
  id: RemoveAttribute
  parent: FlowR.Core.Message.MessageElement.MessageActions
  langs:
  - csharp
  - vb
  name: RemoveAttribute
  nameWithType: MessageElement.MessageActions.RemoveAttribute
  fullName: FlowR.Core.Message.MessageElement.MessageActions.RemoveAttribute
  type: Field
  source:
    remote:
      path: FlowR.Core/Message/MessageElement.cs
      branch: master
      repo: https://github.com/abbadon1334/RealFlowR.git
    id: RemoveAttribute
    path: ../FlowR.Core/Message/MessageElement.cs
    startLine: 30
  assemblies:
  - FlowR.Core
  namespace: FlowR.Core.Message
  summary: "\nElement Remover Attribute\n"
  example: []
  syntax:
    content: RemoveAttribute = 3
    return:
      type: FlowR.Core.Message.MessageElement.MessageActions
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: FlowR.Core.Message.MessageElement.MessageActions.StartListenEvent
  commentId: F:FlowR.Core.Message.MessageElement.MessageActions.StartListenEvent
  id: StartListenEvent
  parent: FlowR.Core.Message.MessageElement.MessageActions
  langs:
  - csharp
  - vb
  name: StartListenEvent
  nameWithType: MessageElement.MessageActions.StartListenEvent
  fullName: FlowR.Core.Message.MessageElement.MessageActions.StartListenEvent
  type: Field
  source:
    remote:
      path: FlowR.Core/Message/MessageElement.cs
      branch: master
      repo: https://github.com/abbadon1334/RealFlowR.git
    id: StartListenEvent
    path: ../FlowR.Core/Message/MessageElement.cs
    startLine: 35
  assemblies:
  - FlowR.Core
  namespace: FlowR.Core.Message
  summary: "\nStart listen for an EventName\n"
  example: []
  syntax:
    content: StartListenEvent = 4
    return:
      type: FlowR.Core.Message.MessageElement.MessageActions
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: FlowR.Core.Message.MessageElement.MessageActions.StopListenEvent
  commentId: F:FlowR.Core.Message.MessageElement.MessageActions.StopListenEvent
  id: StopListenEvent
  parent: FlowR.Core.Message.MessageElement.MessageActions
  langs:
  - csharp
  - vb
  name: StopListenEvent
  nameWithType: MessageElement.MessageActions.StopListenEvent
  fullName: FlowR.Core.Message.MessageElement.MessageActions.StopListenEvent
  type: Field
  source:
    remote:
      path: FlowR.Core/Message/MessageElement.cs
      branch: master
      repo: https://github.com/abbadon1334/RealFlowR.git
    id: StopListenEvent
    path: ../FlowR.Core/Message/MessageElement.cs
    startLine: 40
  assemblies:
  - FlowR.Core
  namespace: FlowR.Core.Message
  summary: "\nStop listen for an EventName\n"
  example: []
  syntax:
    content: StopListenEvent = 5
    return:
      type: FlowR.Core.Message.MessageElement.MessageActions
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: FlowR.Core.Message.MessageElement.MessageActions.SetText
  commentId: F:FlowR.Core.Message.MessageElement.MessageActions.SetText
  id: SetText
  parent: FlowR.Core.Message.MessageElement.MessageActions
  langs:
  - csharp
  - vb
  name: SetText
  nameWithType: MessageElement.MessageActions.SetText
  fullName: FlowR.Core.Message.MessageElement.MessageActions.SetText
  type: Field
  source:
    remote:
      path: FlowR.Core/Message/MessageElement.cs
      branch: master
      repo: https://github.com/abbadon1334/RealFlowR.git
    id: SetText
    path: ../FlowR.Core/Message/MessageElement.cs
    startLine: 45
  assemblies:
  - FlowR.Core
  namespace: FlowR.Core.Message
  summary: "\nSet Element Text\n"
  example: []
  syntax:
    content: SetText = 6
    return:
      type: FlowR.Core.Message.MessageElement.MessageActions
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: FlowR.Core.Message.MessageElement.MessageActions.SetProperty
  commentId: F:FlowR.Core.Message.MessageElement.MessageActions.SetProperty
  id: SetProperty
  parent: FlowR.Core.Message.MessageElement.MessageActions
  langs:
  - csharp
  - vb
  name: SetProperty
  nameWithType: MessageElement.MessageActions.SetProperty
  fullName: FlowR.Core.Message.MessageElement.MessageActions.SetProperty
  type: Field
  source:
    remote:
      path: FlowR.Core/Message/MessageElement.cs
      branch: master
      repo: https://github.com/abbadon1334/RealFlowR.git
    id: SetProperty
    path: ../FlowR.Core/Message/MessageElement.cs
    startLine: 50
  assemblies:
  - FlowR.Core
  namespace: FlowR.Core.Message
  summary: "\nElement Set Property\n"
  example: []
  syntax:
    content: SetProperty = 7
    return:
      type: FlowR.Core.Message.MessageElement.MessageActions
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: FlowR.Core.Message.MessageElement.MessageActions.CallMethod
  commentId: F:FlowR.Core.Message.MessageElement.MessageActions.CallMethod
  id: CallMethod
  parent: FlowR.Core.Message.MessageElement.MessageActions
  langs:
  - csharp
  - vb
  name: CallMethod
  nameWithType: MessageElement.MessageActions.CallMethod
  fullName: FlowR.Core.Message.MessageElement.MessageActions.CallMethod
  type: Field
  source:
    remote:
      path: FlowR.Core/Message/MessageElement.cs
      branch: master
      repo: https://github.com/abbadon1334/RealFlowR.git
    id: CallMethod
    path: ../FlowR.Core/Message/MessageElement.cs
    startLine: 55
  assemblies:
  - FlowR.Core
  namespace: FlowR.Core.Message
  summary: "\nElement Call Method\n"
  example: []
  syntax:
    content: CallMethod = 8
    return:
      type: FlowR.Core.Message.MessageElement.MessageActions
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: FlowR.Core.Message.MessageElement.MessageActions.AddMethod
  commentId: F:FlowR.Core.Message.MessageElement.MessageActions.AddMethod
  id: AddMethod
  parent: FlowR.Core.Message.MessageElement.MessageActions
  langs:
  - csharp
  - vb
  name: AddMethod
  nameWithType: MessageElement.MessageActions.AddMethod
  fullName: FlowR.Core.Message.MessageElement.MessageActions.AddMethod
  type: Field
  source:
    remote:
      path: FlowR.Core/Message/MessageElement.cs
      branch: master
      repo: https://github.com/abbadon1334/RealFlowR.git
    id: AddMethod
    path: ../FlowR.Core/Message/MessageElement.cs
    startLine: 60
  assemblies:
  - FlowR.Core
  namespace: FlowR.Core.Message
  summary: "\nAdd a custom method to an Element\n"
  example: []
  syntax:
    content: AddMethod = 9
    return:
      type: FlowR.Core.Message.MessageElement.MessageActions
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: FlowR.Core.Message
  commentId: N:FlowR.Core.Message
  name: FlowR.Core.Message
  nameWithType: FlowR.Core.Message
  fullName: FlowR.Core.Message
- uid: FlowR.Core.Message.MessageElement.MessageActions
  commentId: T:FlowR.Core.Message.MessageElement.MessageActions
  parent: FlowR.Core.Message
  name: MessageElement.MessageActions
  nameWithType: MessageElement.MessageActions
  fullName: FlowR.Core.Message.MessageElement.MessageActions
